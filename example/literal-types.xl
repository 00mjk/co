// ----------------------------------------------------------------------------
// TODO  integers, binary, default for lit
ib0 = 0b0   // i32 (<=i8)

// ----------------------------------------------------------------------------
// TODO  integers, binary, fitted
fib0 i8 = 0b0   // i32

// ----------------------------------------------------------------------------
// integers, octal, default for lit
io0 = 0b0   // i32 (<=i8)
io1 = 0o177 // i32 (<=i8)
io3 = 0o200 // i32 (<=u8)

io4 = 0o400      // i32 (<=i16)
io5 = 0o77777    // i32 (<=i16)
io6 = 0o100000   // i32 (<=u16)

io7 = 0o17777777777 // i32
io8 = 0o20000000000 // i64 (<=u32)

io9 = 0o40000000000 // i64 (<=u32)
io10 = 0o377777777777777751 // i64
io11 = 0o777777777777777777777 // i64
io12 = 0o1000000000000000000000 // u64

// ----------------------------------------------------------------------------
// TODO  integers, octal, fitted
fio0 i8 = 0b0   // i32

// ----------------------------------------------------------------------------
// integers, decimal, default for lit
id0 = 0   // i32 (<=i8)
id1 = 127 // i32 (<=i8)
id2 = 128 // i32 (<=u8)

id3 = 256   // i32 (<=i16)
id4 = 32767 // i32 (<=i16)
id5 = 32768 // i32 (<=u16)

id6 = 1048576   // i32
id7 = 2147483647 // i32
id8 = 2147483648 // i64 (<=u32)

id10 = 4294967296          // i64
id11 = 9223372036854775807 // i64
id12 = 9223372036854775808 // u64
id13 = 18446744073709551615 // u64
// id13b = 18446744073709551616
 // error: constant 18446744073709551616 overflows u64

// ----------------------------------------------------------------------------
// integers, decimal, fitted
fid0 i8 = 0
fid1 i8 = 127
fid2 u8 = 128
// fid2b i8 = 128 // error: constant 128 overflows i8

fid3 i16 = 256
fid4 i16 = 32767
fid5 u16 = 32768
// fid5 i16 = 32768 // error: constant 32768 overflows i16

fid6 i32 = 1048576
fid7 i32 = 2147483647
fid8 u32 = 2147483648
// fid8 i32 = 2147483648 // error: constant 2147483648 overflows i32

fid10 i64 = 4294967296
fid11 i64 = 9223372036854775807
fid12 u64 = 9223372036854775808
// fid12 i64 = 9223372036854775808
//   // error: constant 9223372036854775808 overflows i64

// ----------------------------------------------------------------------------
// integers, hex, default for lit
ih0 = 0x0  // i32 (<=i8)
ih1 = 0x7F // i32 (<=i8)
ih2 = 0x80 // i32 (<=u8)

ih3 = 0x100  // i32 (<=i16)
ih4 = 0x7FFF // i32 (<=i16)
ih5 = 0x8000 // i32 (<=u16)

ih6 = 0x100000   // i32
ih7 = 0x7FFFFFFF // i32
ih8 = 0x80000000 // i64 (<=u32)
ih8b = 0x0007FFFFFFF // i32

ih10 = 0x100000000        // i64
ih11 = 0x7FFFFFFFFFFFFFFF // i64
ih12 = 0x8000000000000000 // u64
// ih12a = 0x10000000000000000
//   // error: constant 0x10000000000000000 overflows u64

// ----------------------------------------------------------------------------
// integers, hex, fitted
fih0 i8 = 0x0
fih1 i8 = 0x7F
fih2 u8 = 0x80
// fih2b i8 = 0x80 // error: constant 0x80 overflows i8
fih2c u8 = 0x00000080 // leading zeroes

fih3 i16 = 0x1000
fih4 i16 = 0x7FFF
fih5 u16 = 0x8000
// fih5e i16 = 0x8000 // error: constant 0x8000 overflows i16

fih6 i32 = 0x10000
fih7 i32 = 0x7FFFFFFF
fih8 u32 = 0x80000000
// fih8e i32 = 0x80000000 // error: constant 0x800000 overflows i32

fih10 i64 = 0x100000000
fih11 i64 = 0x7FFFFFFFFFFFFFFF
fih12 u64 = 0x8000000000000000
// fih12a i64 = 0x8000000000000000
//   // error: constant 0x8000000000000000 overflows i64
// fih12b u64 = 0x10000000000000000
//   // error: constant 0x10000000000000000 overflows u64
