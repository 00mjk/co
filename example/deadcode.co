// fun foo(x int) int {
//   x = 1
//   y = 2
//   if x > y {
//     x = x + 3
//   }
//   x + y
// }

// fun elim_while_branch int {
//   x = 1
//   y = x + 1
//   z = 91
//   while x < y {  // branch never taken
//     x = z
//   }
//   x + y
// }

fun shortcircuit1 int {
  x = 1
  y = x > 0
  z = 9
  while y {  // branch never taken
    x = x + 1
  }
  x
}

/*

elim_while_branch ()->int
  b0:
    v0 = ConstI32 <i32> [1] : 1  // x
    v1 = ConstI32 <i32> [2] : 2  // y
    v2 = ConstI32 <i32> [91] : 1  // z
  cont —> b1

  b1: <— b0, b2  // while
    v3 = Phi <i32> v0 v2 : 2
    v5 = GreaterS32 <bool> v3 v1 : 1
  if v5 —> b2, b3

  b2: <— b1  // then
  cont —> b1

  b3: <— b1  // endwhile
    v7 = AddI32 <i32> v3 v1 : 1
  ret v7

*/

// fun foo(x int) int {
//   x = 1
//   y = 2
//   if x > y {
//     x = x + 3
//   } else {
//     x = x + 4
//   }
//   x + y
// }