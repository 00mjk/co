import { SInt64, UInt64, Int64 } from './int64'
import { asciibuf } from './util'
import { assertEq, assertEqList, assertEqObj, assertThrows } from './test'


TEST('basic', () => {
  let s, u
  
  s = new SInt64(0xFFFFFFFF | 0, 0x7FFFFFFF | 0)
  assertEq(s.toFloat64(), 9223372036854775807)
  assertEq(s.toString(10), "9223372036854775807")

  s = new SInt64(0 | 0, 0 | 0)
  assertEq(s.toFloat64(), 0)
  assertEq(s.toString(10), "0")

  u = new UInt64(0xFFFFFFFF | 0, 0xFFFFFFFF | 0)
  assertEq(u.toString(10), "18446744073709551615")
})


TEST('constants', () => {
  let s, u
  
  s = new SInt64(0xFFFFFFFF | 0, 0x7FFFFFFF | 0)
  assert(s.constructor === SInt64.MAX.constructor)
  assert(s.eq(SInt64.MAX))

  s = new SInt64(0, 0x80000000 | 0)
  assert(s.constructor === SInt64.MIN.constructor)
  assert(s.eq(SInt64.MIN))

  s = new SInt64(0, 0)
  assert(s.constructor === SInt64.ZERO.constructor)
  assert(s.eq(SInt64.ZERO))

  s = new SInt64(1, 0)
  assert(s.constructor === SInt64.ONE.constructor)
  assert(s.eq(SInt64.ONE))

  s = new SInt64(-1 | 0, -1)
  assert(s.constructor === SInt64.ONENEG.constructor)
  assert(s.eq(SInt64.ONENEG))

  u = new UInt64(0xFFFFFFFF | 0, 0xFFFFFFFF | 0)
  assert(u.constructor === UInt64.MAX.constructor)
  assert(u.eq(UInt64.MAX))

  u = new UInt64(0, 0)
  assert(u.constructor === UInt64.MIN.constructor)
  assert(u.constructor === UInt64.ZERO.constructor)
  assert(u.eq(UInt64.MIN))
  assert(u.eq(UInt64.ZERO))
})


TEST('toString', () => {
  let s, u

  s = SInt64.MAX
  assertEq(s.toString(16), "7fffffffffffffff")
  assertEq(s.toString(10), "9223372036854775807")
  assertEq(s.toString(8),  "777777777777777777777")
  assertEq(s.toString(36), "1y2p0ij32e8e7")

  s = SInt64.MIN
  assertEq(s.toString(16), "-8000000000000000")
  assertEq(s.toString(10), "-9223372036854775808")
  assertEq(s.toString(8),  "-1000000000000000000000")
  assertEq(s.toString(36), "-1y2p0ij32e8e8")

  u = UInt64.MAX
  assertEq(u.toString(16), "ffffffffffffffff")
  assertEq(u.toString(10), "18446744073709551615")
  assertEq(u.toString(8), "1777777777777777777777")
  assertEq(u.toString(36), "3w5e11264sgsf")
})


TEST('fromStr', () => {
  function t(I :any, s :string, radix :int) {
    assertEq(I.fromStr(s, radix).toString(radix), s)
  }

  t(SInt64, "7fffffffffffffff", 16)
  t(SInt64, "9223372036854775807", 10)
  t(SInt64, "777777777777777777777", 8)
  t(SInt64, "1y2p0ij32e8e7", 36)

  t(SInt64, "-8000000000000000", 16)
  t(SInt64, "-9223372036854775808", 10)
  t(SInt64, "-1000000000000000000000", 8)
  t(SInt64, "-1y2p0ij32e8e8", 36)

  t(UInt64, "efffffffffffffff", 16) // this caught a bug once
  t(UInt64, "ffffffffffffffff", 16)
  t(UInt64, "18446744073709551615", 10)
  t(UInt64, "1777777777777777777777", 8)
  t(UInt64, "3w5e11264sgsf", 36)
})


TEST('fromByteStr', () => {
  function t(I :any, str :string, radix :int) {
    let inbuf = asciibuf(str)
    let u = I.fromByteStr(inbuf, radix)
    assertEq(u.toString(radix), str)
  }

  t(SInt64, "7fffffffffffffff", 16)
  t(SInt64, "9223372036854775807", 10)
  t(SInt64, "777777777777777777777", 8)
  t(SInt64, "1y2p0ij32e8e7", 36)

  t(SInt64, "-8000000000000000", 16)
  t(SInt64, "-9223372036854775808", 10)
  t(SInt64, "-1000000000000000000000", 8)
  t(SInt64, "-1y2p0ij32e8e8", 36)

  t(UInt64, "efffffffffffffff", 16) // this caught a bug once
  t(UInt64, "ffffffffffffffff", 16)
  t(UInt64, "18446744073709551615", 10)
  t(UInt64, "1777777777777777777777", 8)
  t(UInt64, "3w5e11264sgsf", 36)
})


TEST('fromByteStr0', () => {
  function t(I :any, str :string, radix :int) {
    let expectstr = str
    if (str[0] == '-') {
      str = str.substr(1)
    }
    let inbuf = asciibuf(str)
    let u = I.fromByteStr0(inbuf, radix, 0, inbuf.length)
    assertEq(u.toString(radix), expectstr)
  }

  t(SInt64, "7fffffffffffffff", 16)
  t(SInt64, "9223372036854775807", 10)
  t(SInt64, "777777777777777777777", 8)
  t(SInt64, "1y2p0ij32e8e7", 36)

  t(SInt64, "-8000000000000000", 16)
  t(SInt64, "-9223372036854775808", 10)
  t(SInt64, "-1000000000000000000000", 8)
  t(SInt64, "-1y2p0ij32e8e8", 36)

  t(UInt64, "efffffffffffffff", 16) // this caught a bug once
  t(UInt64, "ffffffffffffffff", 16)
  t(UInt64, "18446744073709551615", 10)
  t(UInt64, "1777777777777777777777", 8)
  t(UInt64, "3w5e11264sgsf", 36)
})


TEST('toBytes', () => {
  let s
  s = new SInt64(0x01234567, 0x12345678)
  assertEqList(
    s.toBytesBE(),
    [ 0x12, 0x34, 0x56, 0x78, 0x01, 0x23, 0x45, 0x67 ]
  )
  assertEqList(
    s.toBytesLE(),
    [ 0x67, 0x45, 0x23, 0x01, 0x78, 0x56, 0x34, 0x12 ]
  )
  // Note: we are not testing toBytes separately for UInt64
  // since SInt64 and UInt64 uses the same implementations.
})


TEST('fromBytes', () => {
  let s, u
  s = new SInt64(0x01234567, 0x12345678)
  u = new UInt64(0x01234567, 0x12345678)
  assertEqObj(SInt64.fromBytesLE(s.toBytesLE()), s)
  assertEqObj(
    SInt64.fromBytesBE([0x12, 0x34, 0x56, 0x78, 0x01, 0x23, 0x45, 0x67]),
    s
  )
  assertEqObj(
    SInt64.fromBytesLE([0x67, 0x45, 0x23, 0x01, 0x78, 0x56, 0x34, 0x12]),
    s
  )
  assertEqObj(
    UInt64.fromBytesLE([0x67, 0x45, 0x23, 0x01, 0x78, 0x56, 0x34, 0x12]),
    u
  )
  // Note: we are not testing fromBytes separately for UInt64
  // since SInt64 and UInt64 uses the same implementations.
})


TEST('fromInt32', () => {
  let s, u

  s = SInt64.fromInt32(0x7FFFFFFF)
  assertEq(s.toString(10), '2147483647')
  
  s = SInt64.fromInt32(0xFFFFFFFF)
  assertEq(s.toString(10), '-1')

  s = SInt64.fromInt32(-0x80000000)
  assertEq(s.toString(10), '-2147483648')

  s = SInt64.fromInt32(-0x80000001)
  assertEq(s.toString(10), '2147483647') // wraps around


  u = UInt64.fromInt32(0xFFFFFFFF)
  assertEq(u.toString(10), '4294967295')

  u = UInt64.fromInt32(0xFFFFFFFFFF)  // limited to 0xFFFFFFFF
  assertEq(u.toString(10), '4294967295')

  u = UInt64.fromInt32(-0xFFFFFFFe)
  assertEq(u.toString(10), '18446744069414584322') // wraps around

  // sanity-check constructor before relying on _low and _high values
  u = new UInt64(-1, -1)
  assertEq(u._low, -1)
  assertEq(u._high, -1)
  assertEq(u.toString(10), '18446744073709551615')

  u = UInt64.fromInt32(-1) // wraps around to UInt64
  assertEq(u._low, -1)
  assertEq(u._high, -1)
  assertEq(u.toString(10), '18446744073709551615')

  u = UInt64.fromInt32(-2) // wraps around with -1
  assertEq(u.toString(10), '18446744073709551614')
})


TEST('fromFloat64/s', () => {
  let s

  s = SInt64.fromFloat64(0x7FFFFFFF)
  assertEq(s.toFloat64(), 2147483647)
  assertEq(s.toString(10), '2147483647')

  s = SInt64.fromFloat64(0xFFFFFFFFFF)
  assertEq(s.toFloat64(), 1099511627775)
  assertEq(s.toString(10), '1099511627775')

  s = SInt64.fromFloat64(-0xFFFFFFFFFF)
  assertEq(s.toFloat64(), -1099511627775)
  assertEq(s.toString(10), '-1099511627775')

  s = SInt64.fromFloat64(0x7FFFFFFFFFFFFFFF)
  assertEq(s.toFloat64(), 9223372036854775807)
  assertEq(s.toString(10), '9223372036854775807')

  s = SInt64.fromFloat64(-0x8000000000000000)
  assertEq(s.toFloat64(), -9223372036854775808)
  assertEq(s.toString(10), '-9223372036854775808')

  s = SInt64.fromFloat64(0xFFFFFFFFFFFFFFFF) // limited to SInt64.MAX
  assertEq(s.toFloat64(), 9223372036854775807)
  assertEq(s.toString(10), '9223372036854775807')
})


TEST('fromFloat64/u', () => {
  let u

  u = UInt64.fromFloat64(0x7FFFFFFF)
  assertEq(u.toFloat64(), 2147483647)
  assertEq(u.toString(10), '2147483647')

  u = UInt64.fromFloat64(0xFFFFFFFFFF)
  assertEq(u.toFloat64(), 1099511627775)
  assertEq(u.toString(10), '1099511627775')

  u = UInt64.fromFloat64(0xFFFFFFFFFFFFFFFF)
  assertEq(u.toFloat64(), 18446744073709551615)
  assertEq(u.toString(10), '18446744073709551615')

  u = UInt64.fromFloat64(-1) // limited to UInt64.MIN (zero)
  assertEq(u.toFloat64(), 0)
  assertEq(u.toString(10), '0')

  u = UInt64.fromFloat64(-0xFFFFFFFFFF) // limited to UInt64.MIN (zero)
  assertEq(u.toFloat64(), 0)
  assertEq(u.toString(10), '0')
})


TEST('maybeFromFloat64/s', () => {
  let s

  s = SInt64.maybeFromFloat64(123) as UInt64
  assert(s != null)
  assertEq(s.toFloat64(), 123)
  assertEq(s.toString(10), '123')

  s = SInt64.maybeFromFloat64(0x7FFFFFFF) as UInt64
  assert(s != null)
  assertEq(s.toFloat64(), 2147483647)
  assertEq(s.toString(10), '2147483647')

  s = SInt64.maybeFromFloat64(0xFFFFFFFFFF) as UInt64
  assert(s != null)
  assertEq(s.toFloat64(), 1099511627775)
  assertEq(s.toString(10), '1099511627775')

  s = SInt64.maybeFromFloat64(-0xFFFFFFFFFF) as UInt64
  assert(s != null)
  assertEq(s.toFloat64(), -1099511627775)
  assertEq(s.toString(10), '-1099511627775')

  s = SInt64.maybeFromFloat64(0x7FFFFFFFFFFFFFFF) as UInt64
  assert(s != null)
  assertEq(s.toFloat64(), 9223372036854775807)
  assertEq(s.toString(10), '9223372036854775807')

  s = SInt64.maybeFromFloat64(-0x8000000000000000) as UInt64
  assert(s != null)
  assertEq(s.toFloat64(), -9223372036854775808)
  assertEq(s.toString(10), '-9223372036854775808')

  s = SInt64.maybeFromFloat64(0xFFFFFFFFFFFFFFFF) as null
    // limited to SInt64.MAX
  assertEq(s, null)
})


TEST('maybeFromFloat64/u', () => {
  let u

  u = UInt64.maybeFromFloat64(0x7FFFFFFF) as UInt64
  assert(u != null)
  assertEq(u.toFloat64(), 2147483647)
  assertEq(u.toString(10), '2147483647')

  u = UInt64.maybeFromFloat64(0xFFFFFFFFFF) as UInt64
  assert(u != null)
  assertEq(u.toFloat64(), 1099511627775)
  assertEq(u.toString(10), '1099511627775')

  u = UInt64.maybeFromFloat64(0xFFFFFFFFFFFFFFFF) as UInt64
  assert(u != null)
  assertEq(u.toFloat64(), 18446744073709551615)
  assertEq(u.toString(10), '18446744073709551615')

  u = UInt64.maybeFromFloat64(-1) as null // limited to UInt64.MIN
  assertEq(u, null)

  u = UInt64.maybeFromFloat64(-0xFFFFFFFFFF) as null // limited to UInt64.MIN
  assertEq(u, null)
})


TEST('sign-conv', () => {
  let s, u

  s = SInt64.fromFloat64(-1)
  assertEq(s.toFloat64(), -1)
  assertEq(s.toString(10), '-1')
  
  u = s.toUnsigned()
  assertEq(u.toFloat64(), 0xFFFFFFFFFFFFFFFF)
  assertEq(u.toString(16), 'ffffffffffffffff')
  
  s = u.toSigned()
  assertEq(s.toFloat64(), -1)
  assertEq(s.toString(10), '-1')
})


TEST('sub-max-signed', () => {
  let u
  //
  // UINT64_MAX - INT64_MAX - 1 == INT64_MAX
  //
  u = UInt64.MAX.sub(SInt64.MAX).sub(SInt64.ONE)
  assertEq(u.toFloat64(), SInt64.MAX.toFloat64())
  assertEq(u.toString(), SInt64.MAX.toString())
})


TEST('sub-max-unsigned', () => {
  let u
  //
  // UINT64_MAX - UINT64_MAX == 0
  //
  u = UInt64.MAX.sub(UInt64.MAX)
  assertEq(u._low, 0)
  assertEq(u._high, 0)
  assertEq(u.toFloat64(), 0)
  assertEq(u.toString(), '0')
})


TEST('sub-zero-cross-sign', () => {
  let s, u

  // UINT64_MAX - uint64(1) == 0xFFFFFFFFFFFFFFFe
  u = UInt64.MAX.sub(UInt64.ONE)
  assertEq(u.toFloat64(), 0xFFFFFFFFFFFFFFFe)
  assertEq(u.toString(), '18446744073709551614')

  // UINT64_MAX - int64(-1) == 0
  u = UInt64.MAX.sub(SInt64.ONENEG) // effectively addition -- wraps to 0
  assertEq(u.toFloat64(), 0)
  assertEq(u.toString(), '0')

  // int64(-1)
  s = SInt64.fromInt32(-1)
  assertEq(s._low, -1)
  assertEq(s._high, -1)

  // uint64(0) - int64(-1) == UINT64_MAX
  u = UInt64.fromInt32(0).add(s)
  assertEq(u.toFloat64(), 0xFFFFFFFFFFFFFFFF)
  assertEq(u.toString(), '18446744073709551615')
})


// if wasm is in use and DEBUG, then test JS impl of div as well
let js_mul   = (SInt64.prototype as any)._js_mul as (x:Int64)=>SInt64
let js_div_s = (SInt64.prototype as any)._js_div as (x:Int64)=>SInt64
let js_div_u = (UInt64.prototype as any)._js_div as (x:Int64)=>UInt64
let js_mod_s = (SInt64.prototype as any)._js_mod as (x:Int64)=>SInt64
// let js_mod_u = (UInt64.prototype as any)._js_mod as (x:Int64)=>UInt64
// TODO test js_mod_u


TEST('div-max', () => {
  let s, u

  // UINT64_MAX / INT64_MAX == 2
  s = UInt64.MAX.div(SInt64.MAX)
  assertEq(s.toFloat64(), 2)
  assertEq(s.toString(), '2')

  // UINT64_MAX / UINT64_MAX == 1
  u = UInt64.MAX.div(UInt64.MAX)
  assertEq(u.toString(), '1')
})

if (js_div_u) TEST('div-max/js', () => {
  let s, u

  // UINT64_MAX / INT64_MAX == 2
  s = js_div_u.call(UInt64.MAX, SInt64.MAX)
  assertEq(s.toFloat64(), 2)
  assertEq(s.toString(), '2')

  // UINT64_MAX / UINT64_MAX == 1
  u = js_div_u.call(UInt64.MAX, UInt64.MAX)
  assertEq(u.toString(), '1')
})


TEST('div-neg', () => {
  let s, u

  // uint64(int64(-1)) == UINT64_MAX - 1 == 0xFFFFFFFFFFFFFFFe
  s = SInt64.fromInt32(-2)
  assertEq(s.toUnsigned().toString(), UInt64.MAX.sub(UInt64.ONE).toString())

  // UINT64_MAX / (UINT64_MAX - 1) == 1
  // 0xFFFFFFFFFFFFFFFf / 0xFFFFFFFFFFFFFFFe == 1
  u = UInt64.MAX.div(s)
  assertEq(u.toString(), '1')

  // INT64_MIN - 1 == INT64_MIN
  s = SInt64.MIN.div(SInt64.ONE)
  assertEq(s.toString(), SInt64.MIN.toString())
})

if (js_div_u) TEST('div-neg/js', () => {
  let s, u

  s = SInt64.fromInt32(-2)

  // UINT64_MAX / (UINT64_MAX - 1) == 1
  // 0xFFFFFFFFFFFFFFFf / 0xFFFFFFFFFFFFFFFe == 1
  u = js_div_u.call(UInt64.MAX, s)
  assertEq(u.toString(), '1')

  // INT64_MIN - 1 == INT64_MIN
  s = js_div_s.call(SInt64.MIN, SInt64.ONE)
  assertEq(s.toString(), SInt64.MIN.toString())
})


TEST('div-unsigned', () => {
  // make sure division with unsigned numbers yield unsigned results
  let a = new UInt64(0, 8)
  let b = UInt64.fromFloat64(2656901066)
  let x = a.div(b)
  assertEq(x.toString(), '12')
  assertEq(x.constructor, UInt64)
})

if (js_div_u) TEST('div-unsigned/js', () => {
  // make sure division with unsigned numbers yield unsigned results
  let a = new UInt64(0, 8)
  let b = UInt64.fromFloat64(2656901066)
  let x = js_div_u.call(a, b)
  assertEq(x.toString(), '12')
  assertEq(x.constructor, UInt64)
})


TEST('msb-unsigned', () => {
  // most significant bit
  // 1 << 63 == 0x8000000000000000
  let u = UInt64.ONE.shl(63)
  assert(u.eq(SInt64.MIN) == false)
  assertEq(u.toString(), "9223372036854775808")
})

// ---------------------------------------------------------------------------
// The remaining tests comes from Google Closure Library's goog/math/long
// ---------------------------------------------------------------------------

// Interprets the given numbers as the bits of a 32-bit int
function i32array(v :number[]) :number[] {
  for (let i = 0; i < v.length; ++i) {
    v[i] = v[i] & 0xFFFFFFFF
  }
  return v
}

// Note that these are in numerical order.
var TEST_BITS = i32array([
  // low,     high,       low,        high,       low,        high
  0x80000000, 0x00000000, 0xb776d5f5, 0x5634e2db, 0xffefffff, 0xffffffff,
  0xfff00000, 0x00000000, 0xfffeffff, 0xffffffff, 0xffff0000, 0x00000000,
  0xfffffffe, 0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xfeffffff,
  0xffffffff, 0xff000000, 0xffffffff, 0xfffeffff, 0xffffffff, 0xffff0000,
  0xffffffff, 0xffff7fff, 0xffffffff, 0xffff8000, 0xffffffff, 0xfffffffe,
  0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000001,
  0x00000000, 0x00000002, 0x00000000, 0x00007fff, 0x00000000, 0x00008000,
  0x00000000, 0x0000ffff, 0x00000000, 0x00010000, 0x00000000, 0x00ffffff,
  0x00000000, 0x01000000, 0x00000000, 0x5634e2db, 0x00000000, 0xb776d5f5,
  0x00000000, 0xffffffff, 0x00000001, 0x00000000, 0x0000ffff, 0xffffffff,
  0x00010000, 0x00000000, 0x000fffff, 0xffffffff, 0x00100000, 0x00000000,
  0x5634e2db, 0xb776d5f5, 0x7fffffff, 0xffffffff
])

var TEST_ADD_BITS = i32array([
  0x3776d5f5, 0x5634e2db, 0x7fefffff, 0xffffffff, 0xb766d5f5, 0x5634e2da,
  0x7ff00000, 0x00000000, 0xb766d5f5, 0x5634e2db, 0xffdfffff, 0xffffffff,
  0x7ffeffff, 0xffffffff, 0xb775d5f5, 0x5634e2da, 0xffeeffff, 0xfffffffe,
  0xffeeffff, 0xffffffff, 0x7fff0000, 0x00000000, 0xb775d5f5, 0x5634e2db,
  0xffeeffff, 0xffffffff, 0xffef0000, 0x00000000, 0xfffdffff, 0xffffffff,
  0x7ffffffe, 0xffffffff, 0xb776d5f4, 0x5634e2da, 0xffeffffe, 0xfffffffe,
  0xffeffffe, 0xffffffff, 0xfffefffe, 0xfffffffe, 0xfffefffe, 0xffffffff,
  0x7fffffff, 0x00000000, 0xb776d5f4, 0x5634e2db, 0xffeffffe, 0xffffffff,
  0xffefffff, 0x00000000, 0xfffefffe, 0xffffffff, 0xfffeffff, 0x00000000,
  0xfffffffd, 0xffffffff, 0x7fffffff, 0xfeffffff, 0xb776d5f5, 0x5534e2da,
  0xffefffff, 0xfefffffe, 0xffefffff, 0xfeffffff, 0xfffeffff, 0xfefffffe,
  0xfffeffff, 0xfeffffff, 0xfffffffe, 0xfefffffe, 0xfffffffe, 0xfeffffff,
  0x7fffffff, 0xff000000, 0xb776d5f5, 0x5534e2db, 0xffefffff, 0xfeffffff,
  0xffefffff, 0xff000000, 0xfffeffff, 0xfeffffff, 0xfffeffff, 0xff000000,
  0xfffffffe, 0xfeffffff, 0xfffffffe, 0xff000000, 0xffffffff, 0xfdffffff,
  0x7fffffff, 0xfffeffff, 0xb776d5f5, 0x5633e2da, 0xffefffff, 0xfffefffe,
  0xffefffff, 0xfffeffff, 0xfffeffff, 0xfffefffe, 0xfffeffff, 0xfffeffff,
  0xfffffffe, 0xfffefffe, 0xfffffffe, 0xfffeffff, 0xffffffff, 0xfefefffe,
  0xffffffff, 0xfefeffff, 0x7fffffff, 0xffff0000, 0xb776d5f5, 0x5633e2db,
  0xffefffff, 0xfffeffff, 0xffefffff, 0xffff0000, 0xfffeffff, 0xfffeffff,
  0xfffeffff, 0xffff0000, 0xfffffffe, 0xfffeffff, 0xfffffffe, 0xffff0000,
  0xffffffff, 0xfefeffff, 0xffffffff, 0xfeff0000, 0xffffffff, 0xfffdffff,
  0x7fffffff, 0xffff7fff, 0xb776d5f5, 0x563462da, 0xffefffff, 0xffff7ffe,
  0xffefffff, 0xffff7fff, 0xfffeffff, 0xffff7ffe, 0xfffeffff, 0xffff7fff,
  0xfffffffe, 0xffff7ffe, 0xfffffffe, 0xffff7fff, 0xffffffff, 0xfeff7ffe,
  0xffffffff, 0xfeff7fff, 0xffffffff, 0xfffe7ffe, 0xffffffff, 0xfffe7fff,
  0x7fffffff, 0xffff8000, 0xb776d5f5, 0x563462db, 0xffefffff, 0xffff7fff,
  0xffefffff, 0xffff8000, 0xfffeffff, 0xffff7fff, 0xfffeffff, 0xffff8000,
  0xfffffffe, 0xffff7fff, 0xfffffffe, 0xffff8000, 0xffffffff, 0xfeff7fff,
  0xffffffff, 0xfeff8000, 0xffffffff, 0xfffe7fff, 0xffffffff, 0xfffe8000,
  0xffffffff, 0xfffeffff, 0x7fffffff, 0xfffffffe, 0xb776d5f5, 0x5634e2d9,
  0xffefffff, 0xfffffffd, 0xffefffff, 0xfffffffe, 0xfffeffff, 0xfffffffd,
  0xfffeffff, 0xfffffffe, 0xfffffffe, 0xfffffffd, 0xfffffffe, 0xfffffffe,
  0xffffffff, 0xfefffffd, 0xffffffff, 0xfefffffe, 0xffffffff, 0xfffefffd,
  0xffffffff, 0xfffefffe, 0xffffffff, 0xffff7ffd, 0xffffffff, 0xffff7ffe,
  0x7fffffff, 0xffffffff, 0xb776d5f5, 0x5634e2da, 0xffefffff, 0xfffffffe,
  0xffefffff, 0xffffffff, 0xfffeffff, 0xfffffffe, 0xfffeffff, 0xffffffff,
  0xfffffffe, 0xfffffffe, 0xfffffffe, 0xffffffff, 0xffffffff, 0xfefffffe,
  0xffffffff, 0xfeffffff, 0xffffffff, 0xfffefffe, 0xffffffff, 0xfffeffff,
  0xffffffff, 0xffff7ffe, 0xffffffff, 0xffff7fff, 0xffffffff, 0xfffffffd,
  0x80000000, 0x00000000, 0xb776d5f5, 0x5634e2db, 0xffefffff, 0xffffffff,
  0xfff00000, 0x00000000, 0xfffeffff, 0xffffffff, 0xffff0000, 0x00000000,
  0xfffffffe, 0xffffffff, 0xffffffff, 0x00000000, 0xffffffff, 0xfeffffff,
  0xffffffff, 0xff000000, 0xffffffff, 0xfffeffff, 0xffffffff, 0xffff0000,
  0xffffffff, 0xffff7fff, 0xffffffff, 0xffff8000, 0xffffffff, 0xfffffffe,
  0xffffffff, 0xffffffff, 0x80000000, 0x00000001, 0xb776d5f5, 0x5634e2dc,
  0xfff00000, 0x00000000, 0xfff00000, 0x00000001, 0xffff0000, 0x00000000,
  0xffff0000, 0x00000001, 0xffffffff, 0x00000000, 0xffffffff, 0x00000001,
  0xffffffff, 0xff000000, 0xffffffff, 0xff000001, 0xffffffff, 0xffff0000,
  0xffffffff, 0xffff0001, 0xffffffff, 0xffff8000, 0xffffffff, 0xffff8001,
  0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000001,
  0x80000000, 0x00000002, 0xb776d5f5, 0x5634e2dd, 0xfff00000, 0x00000001,
  0xfff00000, 0x00000002, 0xffff0000, 0x00000001, 0xffff0000, 0x00000002,
  0xffffffff, 0x00000001, 0xffffffff, 0x00000002, 0xffffffff, 0xff000001,
  0xffffffff, 0xff000002, 0xffffffff, 0xffff0001, 0xffffffff, 0xffff0002,
  0xffffffff, 0xffff8001, 0xffffffff, 0xffff8002, 0x00000000, 0x00000000,
  0x00000000, 0x00000001, 0x00000000, 0x00000002, 0x00000000, 0x00000003,
  0x80000000, 0x00007fff, 0xb776d5f5, 0x563562da, 0xfff00000, 0x00007ffe,
  0xfff00000, 0x00007fff, 0xffff0000, 0x00007ffe, 0xffff0000, 0x00007fff,
  0xffffffff, 0x00007ffe, 0xffffffff, 0x00007fff, 0xffffffff, 0xff007ffe,
  0xffffffff, 0xff007fff, 0xffffffff, 0xffff7ffe, 0xffffffff, 0xffff7fff,
  0xffffffff, 0xfffffffe, 0xffffffff, 0xffffffff, 0x00000000, 0x00007ffd,
  0x00000000, 0x00007ffe, 0x00000000, 0x00007fff, 0x00000000, 0x00008000,
  0x00000000, 0x00008001, 0x80000000, 0x00008000, 0xb776d5f5, 0x563562db,
  0xfff00000, 0x00007fff, 0xfff00000, 0x00008000, 0xffff0000, 0x00007fff,
  0xffff0000, 0x00008000, 0xffffffff, 0x00007fff, 0xffffffff, 0x00008000,
  0xffffffff, 0xff007fff, 0xffffffff, 0xff008000, 0xffffffff, 0xffff7fff,
  0xffffffff, 0xffff8000, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x00000000, 0x00007ffe, 0x00000000, 0x00007fff, 0x00000000, 0x00008000,
  0x00000000, 0x00008001, 0x00000000, 0x00008002, 0x00000000, 0x0000ffff,
  0x80000000, 0x0000ffff, 0xb776d5f5, 0x5635e2da, 0xfff00000, 0x0000fffe,
  0xfff00000, 0x0000ffff, 0xffff0000, 0x0000fffe, 0xffff0000, 0x0000ffff,
  0xffffffff, 0x0000fffe, 0xffffffff, 0x0000ffff, 0xffffffff, 0xff00fffe,
  0xffffffff, 0xff00ffff, 0xffffffff, 0xfffffffe, 0xffffffff, 0xffffffff,
  0x00000000, 0x00007ffe, 0x00000000, 0x00007fff, 0x00000000, 0x0000fffd,
  0x00000000, 0x0000fffe, 0x00000000, 0x0000ffff, 0x00000000, 0x00010000,
  0x00000000, 0x00010001, 0x00000000, 0x00017ffe, 0x00000000, 0x00017fff,
  0x80000000, 0x00010000, 0xb776d5f5, 0x5635e2db, 0xfff00000, 0x0000ffff,
  0xfff00000, 0x00010000, 0xffff0000, 0x0000ffff, 0xffff0000, 0x00010000,
  0xffffffff, 0x0000ffff, 0xffffffff, 0x00010000, 0xffffffff, 0xff00ffff,
  0xffffffff, 0xff010000, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x00000000, 0x00007fff, 0x00000000, 0x00008000, 0x00000000, 0x0000fffe,
  0x00000000, 0x0000ffff, 0x00000000, 0x00010000, 0x00000000, 0x00010001,
  0x00000000, 0x00010002, 0x00000000, 0x00017fff, 0x00000000, 0x00018000,
  0x00000000, 0x0001ffff, 0x80000000, 0x00ffffff, 0xb776d5f5, 0x5734e2da,
  0xfff00000, 0x00fffffe, 0xfff00000, 0x00ffffff, 0xffff0000, 0x00fffffe,
  0xffff0000, 0x00ffffff, 0xffffffff, 0x00fffffe, 0xffffffff, 0x00ffffff,
  0xffffffff, 0xfffffffe, 0xffffffff, 0xffffffff, 0x00000000, 0x00fefffe,
  0x00000000, 0x00feffff, 0x00000000, 0x00ff7ffe, 0x00000000, 0x00ff7fff,
  0x00000000, 0x00fffffd, 0x00000000, 0x00fffffe, 0x00000000, 0x00ffffff,
  0x00000000, 0x01000000, 0x00000000, 0x01000001, 0x00000000, 0x01007ffe,
  0x00000000, 0x01007fff, 0x00000000, 0x0100fffe, 0x00000000, 0x0100ffff,
  0x80000000, 0x01000000, 0xb776d5f5, 0x5734e2db, 0xfff00000, 0x00ffffff,
  0xfff00000, 0x01000000, 0xffff0000, 0x00ffffff, 0xffff0000, 0x01000000,
  0xffffffff, 0x00ffffff, 0xffffffff, 0x01000000, 0xffffffff, 0xffffffff,
  0x00000000, 0x00000000, 0x00000000, 0x00feffff, 0x00000000, 0x00ff0000,
  0x00000000, 0x00ff7fff, 0x00000000, 0x00ff8000, 0x00000000, 0x00fffffe,
  0x00000000, 0x00ffffff, 0x00000000, 0x01000000, 0x00000000, 0x01000001,
  0x00000000, 0x01000002, 0x00000000, 0x01007fff, 0x00000000, 0x01008000,
  0x00000000, 0x0100ffff, 0x00000000, 0x01010000, 0x00000000, 0x01ffffff,
  0x80000000, 0x5634e2db, 0xb776d5f5, 0xac69c5b6, 0xfff00000, 0x5634e2da,
  0xfff00000, 0x5634e2db, 0xffff0000, 0x5634e2da, 0xffff0000, 0x5634e2db,
  0xffffffff, 0x5634e2da, 0xffffffff, 0x5634e2db, 0x00000000, 0x5534e2da,
  0x00000000, 0x5534e2db, 0x00000000, 0x5633e2da, 0x00000000, 0x5633e2db,
  0x00000000, 0x563462da, 0x00000000, 0x563462db, 0x00000000, 0x5634e2d9,
  0x00000000, 0x5634e2da, 0x00000000, 0x5634e2db, 0x00000000, 0x5634e2dc,
  0x00000000, 0x5634e2dd, 0x00000000, 0x563562da, 0x00000000, 0x563562db,
  0x00000000, 0x5635e2da, 0x00000000, 0x5635e2db, 0x00000000, 0x5734e2da,
  0x00000000, 0x5734e2db, 0x80000000, 0xb776d5f5, 0xb776d5f6, 0x0dabb8d0,
  0xfff00000, 0xb776d5f4, 0xfff00000, 0xb776d5f5, 0xffff0000, 0xb776d5f4,
  0xffff0000, 0xb776d5f5, 0xffffffff, 0xb776d5f4, 0xffffffff, 0xb776d5f5,
  0x00000000, 0xb676d5f4, 0x00000000, 0xb676d5f5, 0x00000000, 0xb775d5f4,
  0x00000000, 0xb775d5f5, 0x00000000, 0xb77655f4, 0x00000000, 0xb77655f5,
  0x00000000, 0xb776d5f3, 0x00000000, 0xb776d5f4, 0x00000000, 0xb776d5f5,
  0x00000000, 0xb776d5f6, 0x00000000, 0xb776d5f7, 0x00000000, 0xb77755f4,
  0x00000000, 0xb77755f5, 0x00000000, 0xb777d5f4, 0x00000000, 0xb777d5f5,
  0x00000000, 0xb876d5f4, 0x00000000, 0xb876d5f5, 0x00000001, 0x0dabb8d0,
  0x80000000, 0xffffffff, 0xb776d5f6, 0x5634e2da, 0xfff00000, 0xfffffffe,
  0xfff00000, 0xffffffff, 0xffff0000, 0xfffffffe, 0xffff0000, 0xffffffff,
  0xffffffff, 0xfffffffe, 0xffffffff, 0xffffffff, 0x00000000, 0xfefffffe,
  0x00000000, 0xfeffffff, 0x00000000, 0xfffefffe, 0x00000000, 0xfffeffff,
  0x00000000, 0xffff7ffe, 0x00000000, 0xffff7fff, 0x00000000, 0xfffffffd,
  0x00000000, 0xfffffffe, 0x00000000, 0xffffffff, 0x00000001, 0x00000000,
  0x00000001, 0x00000001, 0x00000001, 0x00007ffe, 0x00000001, 0x00007fff,
  0x00000001, 0x0000fffe, 0x00000001, 0x0000ffff, 0x00000001, 0x00fffffe,
  0x00000001, 0x00ffffff, 0x00000001, 0x5634e2da, 0x00000001, 0xb776d5f4,
  0x80000001, 0x00000000, 0xb776d5f6, 0x5634e2db, 0xfff00000, 0xffffffff,
  0xfff00001, 0x00000000, 0xffff0000, 0xffffffff, 0xffff0001, 0x00000000,
  0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0xfeffffff,
  0x00000000, 0xff000000, 0x00000000, 0xfffeffff, 0x00000000, 0xffff0000,
  0x00000000, 0xffff7fff, 0x00000000, 0xffff8000, 0x00000000, 0xfffffffe,
  0x00000000, 0xffffffff, 0x00000001, 0x00000000, 0x00000001, 0x00000001,
  0x00000001, 0x00000002, 0x00000001, 0x00007fff, 0x00000001, 0x00008000,
  0x00000001, 0x0000ffff, 0x00000001, 0x00010000, 0x00000001, 0x00ffffff,
  0x00000001, 0x01000000, 0x00000001, 0x5634e2db, 0x00000001, 0xb776d5f5,
  0x00000001, 0xffffffff, 0x8000ffff, 0xffffffff, 0xb777d5f5, 0x5634e2da,
  0xfff0ffff, 0xfffffffe, 0xfff0ffff, 0xffffffff, 0xffffffff, 0xfffffffe,
  0xffffffff, 0xffffffff, 0x0000fffe, 0xfffffffe, 0x0000fffe, 0xffffffff,
  0x0000ffff, 0xfefffffe, 0x0000ffff, 0xfeffffff, 0x0000ffff, 0xfffefffe,
  0x0000ffff, 0xfffeffff, 0x0000ffff, 0xffff7ffe, 0x0000ffff, 0xffff7fff,
  0x0000ffff, 0xfffffffd, 0x0000ffff, 0xfffffffe, 0x0000ffff, 0xffffffff,
  0x00010000, 0x00000000, 0x00010000, 0x00000001, 0x00010000, 0x00007ffe,
  0x00010000, 0x00007fff, 0x00010000, 0x0000fffe, 0x00010000, 0x0000ffff,
  0x00010000, 0x00fffffe, 0x00010000, 0x00ffffff, 0x00010000, 0x5634e2da,
  0x00010000, 0xb776d5f4, 0x00010000, 0xfffffffe, 0x00010000, 0xffffffff,
  0x80010000, 0x00000000, 0xb777d5f5, 0x5634e2db, 0xfff0ffff, 0xffffffff,
  0xfff10000, 0x00000000, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x0000fffe, 0xffffffff, 0x0000ffff, 0x00000000, 0x0000ffff, 0xfeffffff,
  0x0000ffff, 0xff000000, 0x0000ffff, 0xfffeffff, 0x0000ffff, 0xffff0000,
  0x0000ffff, 0xffff7fff, 0x0000ffff, 0xffff8000, 0x0000ffff, 0xfffffffe,
  0x0000ffff, 0xffffffff, 0x00010000, 0x00000000, 0x00010000, 0x00000001,
  0x00010000, 0x00000002, 0x00010000, 0x00007fff, 0x00010000, 0x00008000,
  0x00010000, 0x0000ffff, 0x00010000, 0x00010000, 0x00010000, 0x00ffffff,
  0x00010000, 0x01000000, 0x00010000, 0x5634e2db, 0x00010000, 0xb776d5f5,
  0x00010000, 0xffffffff, 0x00010001, 0x00000000, 0x0001ffff, 0xffffffff,
  0x800fffff, 0xffffffff, 0xb786d5f5, 0x5634e2da, 0xffffffff, 0xfffffffe,
  0xffffffff, 0xffffffff, 0x000effff, 0xfffffffe, 0x000effff, 0xffffffff,
  0x000ffffe, 0xfffffffe, 0x000ffffe, 0xffffffff, 0x000fffff, 0xfefffffe,
  0x000fffff, 0xfeffffff, 0x000fffff, 0xfffefffe, 0x000fffff, 0xfffeffff,
  0x000fffff, 0xffff7ffe, 0x000fffff, 0xffff7fff, 0x000fffff, 0xfffffffd,
  0x000fffff, 0xfffffffe, 0x000fffff, 0xffffffff, 0x00100000, 0x00000000,
  0x00100000, 0x00000001, 0x00100000, 0x00007ffe, 0x00100000, 0x00007fff,
  0x00100000, 0x0000fffe, 0x00100000, 0x0000ffff, 0x00100000, 0x00fffffe,
  0x00100000, 0x00ffffff, 0x00100000, 0x5634e2da, 0x00100000, 0xb776d5f4,
  0x00100000, 0xfffffffe, 0x00100000, 0xffffffff, 0x0010ffff, 0xfffffffe,
  0x0010ffff, 0xffffffff, 0x80100000, 0x00000000, 0xb786d5f5, 0x5634e2db,
  0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x000effff, 0xffffffff,
  0x000f0000, 0x00000000, 0x000ffffe, 0xffffffff, 0x000fffff, 0x00000000,
  0x000fffff, 0xfeffffff, 0x000fffff, 0xff000000, 0x000fffff, 0xfffeffff,
  0x000fffff, 0xffff0000, 0x000fffff, 0xffff7fff, 0x000fffff, 0xffff8000,
  0x000fffff, 0xfffffffe, 0x000fffff, 0xffffffff, 0x00100000, 0x00000000,
  0x00100000, 0x00000001, 0x00100000, 0x00000002, 0x00100000, 0x00007fff,
  0x00100000, 0x00008000, 0x00100000, 0x0000ffff, 0x00100000, 0x00010000,
  0x00100000, 0x00ffffff, 0x00100000, 0x01000000, 0x00100000, 0x5634e2db,
  0x00100000, 0xb776d5f5, 0x00100000, 0xffffffff, 0x00100001, 0x00000000,
  0x0010ffff, 0xffffffff, 0x00110000, 0x00000000, 0x001fffff, 0xffffffff,
  0xd634e2db, 0xb776d5f5, 0x0dabb8d1, 0x0dabb8d0, 0x5624e2db, 0xb776d5f4,
  0x5624e2db, 0xb776d5f5, 0x5633e2db, 0xb776d5f4, 0x5633e2db, 0xb776d5f5,
  0x5634e2da, 0xb776d5f4, 0x5634e2da, 0xb776d5f5, 0x5634e2db, 0xb676d5f4,
  0x5634e2db, 0xb676d5f5, 0x5634e2db, 0xb775d5f4, 0x5634e2db, 0xb775d5f5,
  0x5634e2db, 0xb77655f4, 0x5634e2db, 0xb77655f5, 0x5634e2db, 0xb776d5f3,
  0x5634e2db, 0xb776d5f4, 0x5634e2db, 0xb776d5f5, 0x5634e2db, 0xb776d5f6,
  0x5634e2db, 0xb776d5f7, 0x5634e2db, 0xb77755f4, 0x5634e2db, 0xb77755f5,
  0x5634e2db, 0xb777d5f4, 0x5634e2db, 0xb777d5f5, 0x5634e2db, 0xb876d5f4,
  0x5634e2db, 0xb876d5f5, 0x5634e2dc, 0x0dabb8d0, 0x5634e2dc, 0x6eedabea,
  0x5634e2dc, 0xb776d5f4, 0x5634e2dc, 0xb776d5f5, 0x5635e2db, 0xb776d5f4,
  0x5635e2db, 0xb776d5f5, 0x5644e2db, 0xb776d5f4, 0x5644e2db, 0xb776d5f5,
  0xffffffff, 0xffffffff, 0x3776d5f5, 0x5634e2da, 0x7fefffff, 0xfffffffe,
  0x7fefffff, 0xffffffff, 0x7ffeffff, 0xfffffffe, 0x7ffeffff, 0xffffffff,
  0x7ffffffe, 0xfffffffe, 0x7ffffffe, 0xffffffff, 0x7fffffff, 0xfefffffe,
  0x7fffffff, 0xfeffffff, 0x7fffffff, 0xfffefffe, 0x7fffffff, 0xfffeffff,
  0x7fffffff, 0xffff7ffe, 0x7fffffff, 0xffff7fff, 0x7fffffff, 0xfffffffd,
  0x7fffffff, 0xfffffffe, 0x7fffffff, 0xffffffff, 0x80000000, 0x00000000,
  0x80000000, 0x00000001, 0x80000000, 0x00007ffe, 0x80000000, 0x00007fff,
  0x80000000, 0x0000fffe, 0x80000000, 0x0000ffff, 0x80000000, 0x00fffffe,
  0x80000000, 0x00ffffff, 0x80000000, 0x5634e2da, 0x80000000, 0xb776d5f4,
  0x80000000, 0xfffffffe, 0x80000000, 0xffffffff, 0x8000ffff, 0xfffffffe,
  0x8000ffff, 0xffffffff, 0x800fffff, 0xfffffffe, 0x800fffff, 0xffffffff,
  0xd634e2db, 0xb776d5f4
])

var TEST_SUB_BITS = i32array([
  0x00000000, 0x00000000, 0xc8892a0a, 0xa9cb1d25, 0x80100000, 0x00000001,
  0x80100000, 0x00000000, 0x80010000, 0x00000001, 0x80010000, 0x00000000,
  0x80000001, 0x00000001, 0x80000001, 0x00000000, 0x80000000, 0x01000001,
  0x80000000, 0x01000000, 0x80000000, 0x00010001, 0x80000000, 0x00010000,
  0x80000000, 0x00008001, 0x80000000, 0x00008000, 0x80000000, 0x00000002,
  0x80000000, 0x00000001, 0x80000000, 0x00000000, 0x7fffffff, 0xffffffff,
  0x7fffffff, 0xfffffffe, 0x7fffffff, 0xffff8001, 0x7fffffff, 0xffff8000,
  0x7fffffff, 0xffff0001, 0x7fffffff, 0xffff0000, 0x7fffffff, 0xff000001,
  0x7fffffff, 0xff000000, 0x7fffffff, 0xa9cb1d25, 0x7fffffff, 0x48892a0b,
  0x7fffffff, 0x00000001, 0x7fffffff, 0x00000000, 0x7fff0000, 0x00000001,
  0x7fff0000, 0x00000000, 0x7ff00000, 0x00000001, 0x7ff00000, 0x00000000,
  0x29cb1d24, 0x48892a0b, 0x00000000, 0x00000001, 0x3776d5f5, 0x5634e2db,
  0x00000000, 0x00000000, 0xb786d5f5, 0x5634e2dc, 0xb786d5f5, 0x5634e2db,
  0xb777d5f5, 0x5634e2dc, 0xb777d5f5, 0x5634e2db, 0xb776d5f6, 0x5634e2dc,
  0xb776d5f6, 0x5634e2db, 0xb776d5f5, 0x5734e2dc, 0xb776d5f5, 0x5734e2db,
  0xb776d5f5, 0x5635e2dc, 0xb776d5f5, 0x5635e2db, 0xb776d5f5, 0x563562dc,
  0xb776d5f5, 0x563562db, 0xb776d5f5, 0x5634e2dd, 0xb776d5f5, 0x5634e2dc,
  0xb776d5f5, 0x5634e2db, 0xb776d5f5, 0x5634e2da, 0xb776d5f5, 0x5634e2d9,
  0xb776d5f5, 0x563462dc, 0xb776d5f5, 0x563462db, 0xb776d5f5, 0x5633e2dc,
  0xb776d5f5, 0x5633e2db, 0xb776d5f5, 0x5534e2dc, 0xb776d5f5, 0x5534e2db,
  0xb776d5f5, 0x00000000, 0xb776d5f4, 0x9ebe0ce6, 0xb776d5f4, 0x5634e2dc,
  0xb776d5f4, 0x5634e2db, 0xb775d5f5, 0x5634e2dc, 0xb775d5f5, 0x5634e2db,
  0xb766d5f5, 0x5634e2dc, 0xb766d5f5, 0x5634e2db, 0x6141f319, 0x9ebe0ce6,
  0x3776d5f5, 0x5634e2dc, 0x7fefffff, 0xffffffff, 0x48792a0a, 0xa9cb1d24,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xfff10000, 0x00000000,
  0xfff0ffff, 0xffffffff, 0xfff00001, 0x00000000, 0xfff00000, 0xffffffff,
  0xfff00000, 0x01000000, 0xfff00000, 0x00ffffff, 0xfff00000, 0x00010000,
  0xfff00000, 0x0000ffff, 0xfff00000, 0x00008000, 0xfff00000, 0x00007fff,
  0xfff00000, 0x00000001, 0xfff00000, 0x00000000, 0xffefffff, 0xffffffff,
  0xffefffff, 0xfffffffe, 0xffefffff, 0xfffffffd, 0xffefffff, 0xffff8000,
  0xffefffff, 0xffff7fff, 0xffefffff, 0xffff0000, 0xffefffff, 0xfffeffff,
  0xffefffff, 0xff000000, 0xffefffff, 0xfeffffff, 0xffefffff, 0xa9cb1d24,
  0xffefffff, 0x48892a0a, 0xffefffff, 0x00000000, 0xffeffffe, 0xffffffff,
  0xffef0000, 0x00000000, 0xffeeffff, 0xffffffff, 0xffe00000, 0x00000000,
  0xffdfffff, 0xffffffff, 0xa9bb1d24, 0x48892a0a, 0x7ff00000, 0x00000000,
  0x7ff00000, 0x00000000, 0x48792a0a, 0xa9cb1d25, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xfff10000, 0x00000001, 0xfff10000, 0x00000000,
  0xfff00001, 0x00000001, 0xfff00001, 0x00000000, 0xfff00000, 0x01000001,
  0xfff00000, 0x01000000, 0xfff00000, 0x00010001, 0xfff00000, 0x00010000,
  0xfff00000, 0x00008001, 0xfff00000, 0x00008000, 0xfff00000, 0x00000002,
  0xfff00000, 0x00000001, 0xfff00000, 0x00000000, 0xffefffff, 0xffffffff,
  0xffefffff, 0xfffffffe, 0xffefffff, 0xffff8001, 0xffefffff, 0xffff8000,
  0xffefffff, 0xffff0001, 0xffefffff, 0xffff0000, 0xffefffff, 0xff000001,
  0xffefffff, 0xff000000, 0xffefffff, 0xa9cb1d25, 0xffefffff, 0x48892a0b,
  0xffefffff, 0x00000001, 0xffefffff, 0x00000000, 0xffef0000, 0x00000001,
  0xffef0000, 0x00000000, 0xffe00000, 0x00000001, 0xffe00000, 0x00000000,
  0xa9bb1d24, 0x48892a0b, 0x7ff00000, 0x00000001, 0x7ffeffff, 0xffffffff,
  0x48882a0a, 0xa9cb1d24, 0x000f0000, 0x00000000, 0x000effff, 0xffffffff,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffff0001, 0x00000000,
  0xffff0000, 0xffffffff, 0xffff0000, 0x01000000, 0xffff0000, 0x00ffffff,
  0xffff0000, 0x00010000, 0xffff0000, 0x0000ffff, 0xffff0000, 0x00008000,
  0xffff0000, 0x00007fff, 0xffff0000, 0x00000001, 0xffff0000, 0x00000000,
  0xfffeffff, 0xffffffff, 0xfffeffff, 0xfffffffe, 0xfffeffff, 0xfffffffd,
  0xfffeffff, 0xffff8000, 0xfffeffff, 0xffff7fff, 0xfffeffff, 0xffff0000,
  0xfffeffff, 0xfffeffff, 0xfffeffff, 0xff000000, 0xfffeffff, 0xfeffffff,
  0xfffeffff, 0xa9cb1d24, 0xfffeffff, 0x48892a0a, 0xfffeffff, 0x00000000,
  0xfffefffe, 0xffffffff, 0xfffe0000, 0x00000000, 0xfffdffff, 0xffffffff,
  0xffef0000, 0x00000000, 0xffeeffff, 0xffffffff, 0xa9ca1d24, 0x48892a0a,
  0x7fff0000, 0x00000000, 0x7fff0000, 0x00000000, 0x48882a0a, 0xa9cb1d25,
  0x000f0000, 0x00000001, 0x000f0000, 0x00000000, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffff0001, 0x00000001, 0xffff0001, 0x00000000,
  0xffff0000, 0x01000001, 0xffff0000, 0x01000000, 0xffff0000, 0x00010001,
  0xffff0000, 0x00010000, 0xffff0000, 0x00008001, 0xffff0000, 0x00008000,
  0xffff0000, 0x00000002, 0xffff0000, 0x00000001, 0xffff0000, 0x00000000,
  0xfffeffff, 0xffffffff, 0xfffeffff, 0xfffffffe, 0xfffeffff, 0xffff8001,
  0xfffeffff, 0xffff8000, 0xfffeffff, 0xffff0001, 0xfffeffff, 0xffff0000,
  0xfffeffff, 0xff000001, 0xfffeffff, 0xff000000, 0xfffeffff, 0xa9cb1d25,
  0xfffeffff, 0x48892a0b, 0xfffeffff, 0x00000001, 0xfffeffff, 0x00000000,
  0xfffe0000, 0x00000001, 0xfffe0000, 0x00000000, 0xffef0000, 0x00000001,
  0xffef0000, 0x00000000, 0xa9ca1d24, 0x48892a0b, 0x7fff0000, 0x00000001,
  0x7ffffffe, 0xffffffff, 0x48892a09, 0xa9cb1d24, 0x000fffff, 0x00000000,
  0x000ffffe, 0xffffffff, 0x0000ffff, 0x00000000, 0x0000fffe, 0xffffffff,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0x01000000,
  0xffffffff, 0x00ffffff, 0xffffffff, 0x00010000, 0xffffffff, 0x0000ffff,
  0xffffffff, 0x00008000, 0xffffffff, 0x00007fff, 0xffffffff, 0x00000001,
  0xffffffff, 0x00000000, 0xfffffffe, 0xffffffff, 0xfffffffe, 0xfffffffe,
  0xfffffffe, 0xfffffffd, 0xfffffffe, 0xffff8000, 0xfffffffe, 0xffff7fff,
  0xfffffffe, 0xffff0000, 0xfffffffe, 0xfffeffff, 0xfffffffe, 0xff000000,
  0xfffffffe, 0xfeffffff, 0xfffffffe, 0xa9cb1d24, 0xfffffffe, 0x48892a0a,
  0xfffffffe, 0x00000000, 0xfffffffd, 0xffffffff, 0xfffeffff, 0x00000000,
  0xfffefffe, 0xffffffff, 0xffefffff, 0x00000000, 0xffeffffe, 0xffffffff,
  0xa9cb1d23, 0x48892a0a, 0x7fffffff, 0x00000000, 0x7fffffff, 0x00000000,
  0x48892a09, 0xa9cb1d25, 0x000fffff, 0x00000001, 0x000fffff, 0x00000000,
  0x0000ffff, 0x00000001, 0x0000ffff, 0x00000000, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffffffff, 0x01000001, 0xffffffff, 0x01000000,
  0xffffffff, 0x00010001, 0xffffffff, 0x00010000, 0xffffffff, 0x00008001,
  0xffffffff, 0x00008000, 0xffffffff, 0x00000002, 0xffffffff, 0x00000001,
  0xffffffff, 0x00000000, 0xfffffffe, 0xffffffff, 0xfffffffe, 0xfffffffe,
  0xfffffffe, 0xffff8001, 0xfffffffe, 0xffff8000, 0xfffffffe, 0xffff0001,
  0xfffffffe, 0xffff0000, 0xfffffffe, 0xff000001, 0xfffffffe, 0xff000000,
  0xfffffffe, 0xa9cb1d25, 0xfffffffe, 0x48892a0b, 0xfffffffe, 0x00000001,
  0xfffffffe, 0x00000000, 0xfffeffff, 0x00000001, 0xfffeffff, 0x00000000,
  0xffefffff, 0x00000001, 0xffefffff, 0x00000000, 0xa9cb1d23, 0x48892a0b,
  0x7fffffff, 0x00000001, 0x7fffffff, 0xfeffffff, 0x48892a0a, 0xa8cb1d24,
  0x000fffff, 0xff000000, 0x000fffff, 0xfeffffff, 0x0000ffff, 0xff000000,
  0x0000ffff, 0xfeffffff, 0x00000000, 0xff000000, 0x00000000, 0xfeffffff,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xff010000,
  0xffffffff, 0xff00ffff, 0xffffffff, 0xff008000, 0xffffffff, 0xff007fff,
  0xffffffff, 0xff000001, 0xffffffff, 0xff000000, 0xffffffff, 0xfeffffff,
  0xffffffff, 0xfefffffe, 0xffffffff, 0xfefffffd, 0xffffffff, 0xfeff8000,
  0xffffffff, 0xfeff7fff, 0xffffffff, 0xfeff0000, 0xffffffff, 0xfefeffff,
  0xffffffff, 0xfe000000, 0xffffffff, 0xfdffffff, 0xffffffff, 0xa8cb1d24,
  0xffffffff, 0x47892a0a, 0xfffffffe, 0xff000000, 0xfffffffe, 0xfeffffff,
  0xfffeffff, 0xff000000, 0xfffeffff, 0xfeffffff, 0xffefffff, 0xff000000,
  0xffefffff, 0xfeffffff, 0xa9cb1d24, 0x47892a0a, 0x7fffffff, 0xff000000,
  0x7fffffff, 0xff000000, 0x48892a0a, 0xa8cb1d25, 0x000fffff, 0xff000001,
  0x000fffff, 0xff000000, 0x0000ffff, 0xff000001, 0x0000ffff, 0xff000000,
  0x00000000, 0xff000001, 0x00000000, 0xff000000, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffffffff, 0xff010001, 0xffffffff, 0xff010000,
  0xffffffff, 0xff008001, 0xffffffff, 0xff008000, 0xffffffff, 0xff000002,
  0xffffffff, 0xff000001, 0xffffffff, 0xff000000, 0xffffffff, 0xfeffffff,
  0xffffffff, 0xfefffffe, 0xffffffff, 0xfeff8001, 0xffffffff, 0xfeff8000,
  0xffffffff, 0xfeff0001, 0xffffffff, 0xfeff0000, 0xffffffff, 0xfe000001,
  0xffffffff, 0xfe000000, 0xffffffff, 0xa8cb1d25, 0xffffffff, 0x47892a0b,
  0xfffffffe, 0xff000001, 0xfffffffe, 0xff000000, 0xfffeffff, 0xff000001,
  0xfffeffff, 0xff000000, 0xffefffff, 0xff000001, 0xffefffff, 0xff000000,
  0xa9cb1d24, 0x47892a0b, 0x7fffffff, 0xff000001, 0x7fffffff, 0xfffeffff,
  0x48892a0a, 0xa9ca1d24, 0x000fffff, 0xffff0000, 0x000fffff, 0xfffeffff,
  0x0000ffff, 0xffff0000, 0x0000ffff, 0xfffeffff, 0x00000000, 0xffff0000,
  0x00000000, 0xfffeffff, 0x00000000, 0x00ff0000, 0x00000000, 0x00feffff,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff8000,
  0xffffffff, 0xffff7fff, 0xffffffff, 0xffff0001, 0xffffffff, 0xffff0000,
  0xffffffff, 0xfffeffff, 0xffffffff, 0xfffefffe, 0xffffffff, 0xfffefffd,
  0xffffffff, 0xfffe8000, 0xffffffff, 0xfffe7fff, 0xffffffff, 0xfffe0000,
  0xffffffff, 0xfffdffff, 0xffffffff, 0xfeff0000, 0xffffffff, 0xfefeffff,
  0xffffffff, 0xa9ca1d24, 0xffffffff, 0x48882a0a, 0xfffffffe, 0xffff0000,
  0xfffffffe, 0xfffeffff, 0xfffeffff, 0xffff0000, 0xfffeffff, 0xfffeffff,
  0xffefffff, 0xffff0000, 0xffefffff, 0xfffeffff, 0xa9cb1d24, 0x48882a0a,
  0x7fffffff, 0xffff0000, 0x7fffffff, 0xffff0000, 0x48892a0a, 0xa9ca1d25,
  0x000fffff, 0xffff0001, 0x000fffff, 0xffff0000, 0x0000ffff, 0xffff0001,
  0x0000ffff, 0xffff0000, 0x00000000, 0xffff0001, 0x00000000, 0xffff0000,
  0x00000000, 0x00ff0001, 0x00000000, 0x00ff0000, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffffffff, 0xffff8001, 0xffffffff, 0xffff8000,
  0xffffffff, 0xffff0002, 0xffffffff, 0xffff0001, 0xffffffff, 0xffff0000,
  0xffffffff, 0xfffeffff, 0xffffffff, 0xfffefffe, 0xffffffff, 0xfffe8001,
  0xffffffff, 0xfffe8000, 0xffffffff, 0xfffe0001, 0xffffffff, 0xfffe0000,
  0xffffffff, 0xfeff0001, 0xffffffff, 0xfeff0000, 0xffffffff, 0xa9ca1d25,
  0xffffffff, 0x48882a0b, 0xfffffffe, 0xffff0001, 0xfffffffe, 0xffff0000,
  0xfffeffff, 0xffff0001, 0xfffeffff, 0xffff0000, 0xffefffff, 0xffff0001,
  0xffefffff, 0xffff0000, 0xa9cb1d24, 0x48882a0b, 0x7fffffff, 0xffff0001,
  0x7fffffff, 0xffff7fff, 0x48892a0a, 0xa9ca9d24, 0x000fffff, 0xffff8000,
  0x000fffff, 0xffff7fff, 0x0000ffff, 0xffff8000, 0x0000ffff, 0xffff7fff,
  0x00000000, 0xffff8000, 0x00000000, 0xffff7fff, 0x00000000, 0x00ff8000,
  0x00000000, 0x00ff7fff, 0x00000000, 0x00008000, 0x00000000, 0x00007fff,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff8001,
  0xffffffff, 0xffff8000, 0xffffffff, 0xffff7fff, 0xffffffff, 0xffff7ffe,
  0xffffffff, 0xffff7ffd, 0xffffffff, 0xffff0000, 0xffffffff, 0xfffeffff,
  0xffffffff, 0xfffe8000, 0xffffffff, 0xfffe7fff, 0xffffffff, 0xfeff8000,
  0xffffffff, 0xfeff7fff, 0xffffffff, 0xa9ca9d24, 0xffffffff, 0x4888aa0a,
  0xfffffffe, 0xffff8000, 0xfffffffe, 0xffff7fff, 0xfffeffff, 0xffff8000,
  0xfffeffff, 0xffff7fff, 0xffefffff, 0xffff8000, 0xffefffff, 0xffff7fff,
  0xa9cb1d24, 0x4888aa0a, 0x7fffffff, 0xffff8000, 0x7fffffff, 0xffff8000,
  0x48892a0a, 0xa9ca9d25, 0x000fffff, 0xffff8001, 0x000fffff, 0xffff8000,
  0x0000ffff, 0xffff8001, 0x0000ffff, 0xffff8000, 0x00000000, 0xffff8001,
  0x00000000, 0xffff8000, 0x00000000, 0x00ff8001, 0x00000000, 0x00ff8000,
  0x00000000, 0x00008001, 0x00000000, 0x00008000, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffffffff, 0xffff8002, 0xffffffff, 0xffff8001,
  0xffffffff, 0xffff8000, 0xffffffff, 0xffff7fff, 0xffffffff, 0xffff7ffe,
  0xffffffff, 0xffff0001, 0xffffffff, 0xffff0000, 0xffffffff, 0xfffe8001,
  0xffffffff, 0xfffe8000, 0xffffffff, 0xfeff8001, 0xffffffff, 0xfeff8000,
  0xffffffff, 0xa9ca9d25, 0xffffffff, 0x4888aa0b, 0xfffffffe, 0xffff8001,
  0xfffffffe, 0xffff8000, 0xfffeffff, 0xffff8001, 0xfffeffff, 0xffff8000,
  0xffefffff, 0xffff8001, 0xffefffff, 0xffff8000, 0xa9cb1d24, 0x4888aa0b,
  0x7fffffff, 0xffff8001, 0x7fffffff, 0xfffffffe, 0x48892a0a, 0xa9cb1d23,
  0x000fffff, 0xffffffff, 0x000fffff, 0xfffffffe, 0x0000ffff, 0xffffffff,
  0x0000ffff, 0xfffffffe, 0x00000000, 0xffffffff, 0x00000000, 0xfffffffe,
  0x00000000, 0x00ffffff, 0x00000000, 0x00fffffe, 0x00000000, 0x0000ffff,
  0x00000000, 0x0000fffe, 0x00000000, 0x00007fff, 0x00000000, 0x00007ffe,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffffffe,
  0xffffffff, 0xfffffffd, 0xffffffff, 0xfffffffc, 0xffffffff, 0xffff7fff,
  0xffffffff, 0xffff7ffe, 0xffffffff, 0xfffeffff, 0xffffffff, 0xfffefffe,
  0xffffffff, 0xfeffffff, 0xffffffff, 0xfefffffe, 0xffffffff, 0xa9cb1d23,
  0xffffffff, 0x48892a09, 0xfffffffe, 0xffffffff, 0xfffffffe, 0xfffffffe,
  0xfffeffff, 0xffffffff, 0xfffeffff, 0xfffffffe, 0xffefffff, 0xffffffff,
  0xffefffff, 0xfffffffe, 0xa9cb1d24, 0x48892a09, 0x7fffffff, 0xffffffff,
  0x7fffffff, 0xffffffff, 0x48892a0a, 0xa9cb1d24, 0x00100000, 0x00000000,
  0x000fffff, 0xffffffff, 0x00010000, 0x00000000, 0x0000ffff, 0xffffffff,
  0x00000001, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x01000000,
  0x00000000, 0x00ffffff, 0x00000000, 0x00010000, 0x00000000, 0x0000ffff,
  0x00000000, 0x00008000, 0x00000000, 0x00007fff, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffffffe,
  0xffffffff, 0xfffffffd, 0xffffffff, 0xffff8000, 0xffffffff, 0xffff7fff,
  0xffffffff, 0xffff0000, 0xffffffff, 0xfffeffff, 0xffffffff, 0xff000000,
  0xffffffff, 0xfeffffff, 0xffffffff, 0xa9cb1d24, 0xffffffff, 0x48892a0a,
  0xffffffff, 0x00000000, 0xfffffffe, 0xffffffff, 0xffff0000, 0x00000000,
  0xfffeffff, 0xffffffff, 0xfff00000, 0x00000000, 0xffefffff, 0xffffffff,
  0xa9cb1d24, 0x48892a0a, 0x80000000, 0x00000000, 0x80000000, 0x00000000,
  0x48892a0a, 0xa9cb1d25, 0x00100000, 0x00000001, 0x00100000, 0x00000000,
  0x00010000, 0x00000001, 0x00010000, 0x00000000, 0x00000001, 0x00000001,
  0x00000001, 0x00000000, 0x00000000, 0x01000001, 0x00000000, 0x01000000,
  0x00000000, 0x00010001, 0x00000000, 0x00010000, 0x00000000, 0x00008001,
  0x00000000, 0x00008000, 0x00000000, 0x00000002, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffffffe,
  0xffffffff, 0xffff8001, 0xffffffff, 0xffff8000, 0xffffffff, 0xffff0001,
  0xffffffff, 0xffff0000, 0xffffffff, 0xff000001, 0xffffffff, 0xff000000,
  0xffffffff, 0xa9cb1d25, 0xffffffff, 0x48892a0b, 0xffffffff, 0x00000001,
  0xffffffff, 0x00000000, 0xffff0000, 0x00000001, 0xffff0000, 0x00000000,
  0xfff00000, 0x00000001, 0xfff00000, 0x00000000, 0xa9cb1d24, 0x48892a0b,
  0x80000000, 0x00000001, 0x80000000, 0x00000001, 0x48892a0a, 0xa9cb1d26,
  0x00100000, 0x00000002, 0x00100000, 0x00000001, 0x00010000, 0x00000002,
  0x00010000, 0x00000001, 0x00000001, 0x00000002, 0x00000001, 0x00000001,
  0x00000000, 0x01000002, 0x00000000, 0x01000001, 0x00000000, 0x00010002,
  0x00000000, 0x00010001, 0x00000000, 0x00008002, 0x00000000, 0x00008001,
  0x00000000, 0x00000003, 0x00000000, 0x00000002, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff8002,
  0xffffffff, 0xffff8001, 0xffffffff, 0xffff0002, 0xffffffff, 0xffff0001,
  0xffffffff, 0xff000002, 0xffffffff, 0xff000001, 0xffffffff, 0xa9cb1d26,
  0xffffffff, 0x48892a0c, 0xffffffff, 0x00000002, 0xffffffff, 0x00000001,
  0xffff0000, 0x00000002, 0xffff0000, 0x00000001, 0xfff00000, 0x00000002,
  0xfff00000, 0x00000001, 0xa9cb1d24, 0x48892a0c, 0x80000000, 0x00000002,
  0x80000000, 0x00000002, 0x48892a0a, 0xa9cb1d27, 0x00100000, 0x00000003,
  0x00100000, 0x00000002, 0x00010000, 0x00000003, 0x00010000, 0x00000002,
  0x00000001, 0x00000003, 0x00000001, 0x00000002, 0x00000000, 0x01000003,
  0x00000000, 0x01000002, 0x00000000, 0x00010003, 0x00000000, 0x00010002,
  0x00000000, 0x00008003, 0x00000000, 0x00008002, 0x00000000, 0x00000004,
  0x00000000, 0x00000003, 0x00000000, 0x00000002, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffffffff, 0xffff8003, 0xffffffff, 0xffff8002,
  0xffffffff, 0xffff0003, 0xffffffff, 0xffff0002, 0xffffffff, 0xff000003,
  0xffffffff, 0xff000002, 0xffffffff, 0xa9cb1d27, 0xffffffff, 0x48892a0d,
  0xffffffff, 0x00000003, 0xffffffff, 0x00000002, 0xffff0000, 0x00000003,
  0xffff0000, 0x00000002, 0xfff00000, 0x00000003, 0xfff00000, 0x00000002,
  0xa9cb1d24, 0x48892a0d, 0x80000000, 0x00000003, 0x80000000, 0x00007fff,
  0x48892a0a, 0xa9cb9d24, 0x00100000, 0x00008000, 0x00100000, 0x00007fff,
  0x00010000, 0x00008000, 0x00010000, 0x00007fff, 0x00000001, 0x00008000,
  0x00000001, 0x00007fff, 0x00000000, 0x01008000, 0x00000000, 0x01007fff,
  0x00000000, 0x00018000, 0x00000000, 0x00017fff, 0x00000000, 0x00010000,
  0x00000000, 0x0000ffff, 0x00000000, 0x00008001, 0x00000000, 0x00008000,
  0x00000000, 0x00007fff, 0x00000000, 0x00007ffe, 0x00000000, 0x00007ffd,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff8000,
  0xffffffff, 0xffff7fff, 0xffffffff, 0xff008000, 0xffffffff, 0xff007fff,
  0xffffffff, 0xa9cb9d24, 0xffffffff, 0x4889aa0a, 0xffffffff, 0x00008000,
  0xffffffff, 0x00007fff, 0xffff0000, 0x00008000, 0xffff0000, 0x00007fff,
  0xfff00000, 0x00008000, 0xfff00000, 0x00007fff, 0xa9cb1d24, 0x4889aa0a,
  0x80000000, 0x00008000, 0x80000000, 0x00008000, 0x48892a0a, 0xa9cb9d25,
  0x00100000, 0x00008001, 0x00100000, 0x00008000, 0x00010000, 0x00008001,
  0x00010000, 0x00008000, 0x00000001, 0x00008001, 0x00000001, 0x00008000,
  0x00000000, 0x01008001, 0x00000000, 0x01008000, 0x00000000, 0x00018001,
  0x00000000, 0x00018000, 0x00000000, 0x00010001, 0x00000000, 0x00010000,
  0x00000000, 0x00008002, 0x00000000, 0x00008001, 0x00000000, 0x00008000,
  0x00000000, 0x00007fff, 0x00000000, 0x00007ffe, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffffffff, 0xffff8001, 0xffffffff, 0xffff8000,
  0xffffffff, 0xff008001, 0xffffffff, 0xff008000, 0xffffffff, 0xa9cb9d25,
  0xffffffff, 0x4889aa0b, 0xffffffff, 0x00008001, 0xffffffff, 0x00008000,
  0xffff0000, 0x00008001, 0xffff0000, 0x00008000, 0xfff00000, 0x00008001,
  0xfff00000, 0x00008000, 0xa9cb1d24, 0x4889aa0b, 0x80000000, 0x00008001,
  0x80000000, 0x0000ffff, 0x48892a0a, 0xa9cc1d24, 0x00100000, 0x00010000,
  0x00100000, 0x0000ffff, 0x00010000, 0x00010000, 0x00010000, 0x0000ffff,
  0x00000001, 0x00010000, 0x00000001, 0x0000ffff, 0x00000000, 0x01010000,
  0x00000000, 0x0100ffff, 0x00000000, 0x00020000, 0x00000000, 0x0001ffff,
  0x00000000, 0x00018000, 0x00000000, 0x00017fff, 0x00000000, 0x00010001,
  0x00000000, 0x00010000, 0x00000000, 0x0000ffff, 0x00000000, 0x0000fffe,
  0x00000000, 0x0000fffd, 0x00000000, 0x00008000, 0x00000000, 0x00007fff,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xff010000,
  0xffffffff, 0xff00ffff, 0xffffffff, 0xa9cc1d24, 0xffffffff, 0x488a2a0a,
  0xffffffff, 0x00010000, 0xffffffff, 0x0000ffff, 0xffff0000, 0x00010000,
  0xffff0000, 0x0000ffff, 0xfff00000, 0x00010000, 0xfff00000, 0x0000ffff,
  0xa9cb1d24, 0x488a2a0a, 0x80000000, 0x00010000, 0x80000000, 0x00010000,
  0x48892a0a, 0xa9cc1d25, 0x00100000, 0x00010001, 0x00100000, 0x00010000,
  0x00010000, 0x00010001, 0x00010000, 0x00010000, 0x00000001, 0x00010001,
  0x00000001, 0x00010000, 0x00000000, 0x01010001, 0x00000000, 0x01010000,
  0x00000000, 0x00020001, 0x00000000, 0x00020000, 0x00000000, 0x00018001,
  0x00000000, 0x00018000, 0x00000000, 0x00010002, 0x00000000, 0x00010001,
  0x00000000, 0x00010000, 0x00000000, 0x0000ffff, 0x00000000, 0x0000fffe,
  0x00000000, 0x00008001, 0x00000000, 0x00008000, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffffffff, 0xff010001, 0xffffffff, 0xff010000,
  0xffffffff, 0xa9cc1d25, 0xffffffff, 0x488a2a0b, 0xffffffff, 0x00010001,
  0xffffffff, 0x00010000, 0xffff0000, 0x00010001, 0xffff0000, 0x00010000,
  0xfff00000, 0x00010001, 0xfff00000, 0x00010000, 0xa9cb1d24, 0x488a2a0b,
  0x80000000, 0x00010001, 0x80000000, 0x00ffffff, 0x48892a0a, 0xaacb1d24,
  0x00100000, 0x01000000, 0x00100000, 0x00ffffff, 0x00010000, 0x01000000,
  0x00010000, 0x00ffffff, 0x00000001, 0x01000000, 0x00000001, 0x00ffffff,
  0x00000000, 0x02000000, 0x00000000, 0x01ffffff, 0x00000000, 0x01010000,
  0x00000000, 0x0100ffff, 0x00000000, 0x01008000, 0x00000000, 0x01007fff,
  0x00000000, 0x01000001, 0x00000000, 0x01000000, 0x00000000, 0x00ffffff,
  0x00000000, 0x00fffffe, 0x00000000, 0x00fffffd, 0x00000000, 0x00ff8000,
  0x00000000, 0x00ff7fff, 0x00000000, 0x00ff0000, 0x00000000, 0x00feffff,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xaacb1d24,
  0xffffffff, 0x49892a0a, 0xffffffff, 0x01000000, 0xffffffff, 0x00ffffff,
  0xffff0000, 0x01000000, 0xffff0000, 0x00ffffff, 0xfff00000, 0x01000000,
  0xfff00000, 0x00ffffff, 0xa9cb1d24, 0x49892a0a, 0x80000000, 0x01000000,
  0x80000000, 0x01000000, 0x48892a0a, 0xaacb1d25, 0x00100000, 0x01000001,
  0x00100000, 0x01000000, 0x00010000, 0x01000001, 0x00010000, 0x01000000,
  0x00000001, 0x01000001, 0x00000001, 0x01000000, 0x00000000, 0x02000001,
  0x00000000, 0x02000000, 0x00000000, 0x01010001, 0x00000000, 0x01010000,
  0x00000000, 0x01008001, 0x00000000, 0x01008000, 0x00000000, 0x01000002,
  0x00000000, 0x01000001, 0x00000000, 0x01000000, 0x00000000, 0x00ffffff,
  0x00000000, 0x00fffffe, 0x00000000, 0x00ff8001, 0x00000000, 0x00ff8000,
  0x00000000, 0x00ff0001, 0x00000000, 0x00ff0000, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffffffff, 0xaacb1d25, 0xffffffff, 0x49892a0b,
  0xffffffff, 0x01000001, 0xffffffff, 0x01000000, 0xffff0000, 0x01000001,
  0xffff0000, 0x01000000, 0xfff00000, 0x01000001, 0xfff00000, 0x01000000,
  0xa9cb1d24, 0x49892a0b, 0x80000000, 0x01000001, 0x80000000, 0x5634e2db,
  0x48892a0b, 0x00000000, 0x00100000, 0x5634e2dc, 0x00100000, 0x5634e2db,
  0x00010000, 0x5634e2dc, 0x00010000, 0x5634e2db, 0x00000001, 0x5634e2dc,
  0x00000001, 0x5634e2db, 0x00000000, 0x5734e2dc, 0x00000000, 0x5734e2db,
  0x00000000, 0x5635e2dc, 0x00000000, 0x5635e2db, 0x00000000, 0x563562dc,
  0x00000000, 0x563562db, 0x00000000, 0x5634e2dd, 0x00000000, 0x5634e2dc,
  0x00000000, 0x5634e2db, 0x00000000, 0x5634e2da, 0x00000000, 0x5634e2d9,
  0x00000000, 0x563462dc, 0x00000000, 0x563462db, 0x00000000, 0x5633e2dc,
  0x00000000, 0x5633e2db, 0x00000000, 0x5534e2dc, 0x00000000, 0x5534e2db,
  0x00000000, 0x00000000, 0xffffffff, 0x9ebe0ce6, 0xffffffff, 0x5634e2dc,
  0xffffffff, 0x5634e2db, 0xffff0000, 0x5634e2dc, 0xffff0000, 0x5634e2db,
  0xfff00000, 0x5634e2dc, 0xfff00000, 0x5634e2db, 0xa9cb1d24, 0x9ebe0ce6,
  0x80000000, 0x5634e2dc, 0x80000000, 0xb776d5f5, 0x48892a0b, 0x6141f31a,
  0x00100000, 0xb776d5f6, 0x00100000, 0xb776d5f5, 0x00010000, 0xb776d5f6,
  0x00010000, 0xb776d5f5, 0x00000001, 0xb776d5f6, 0x00000001, 0xb776d5f5,
  0x00000000, 0xb876d5f6, 0x00000000, 0xb876d5f5, 0x00000000, 0xb777d5f6,
  0x00000000, 0xb777d5f5, 0x00000000, 0xb77755f6, 0x00000000, 0xb77755f5,
  0x00000000, 0xb776d5f7, 0x00000000, 0xb776d5f6, 0x00000000, 0xb776d5f5,
  0x00000000, 0xb776d5f4, 0x00000000, 0xb776d5f3, 0x00000000, 0xb77655f6,
  0x00000000, 0xb77655f5, 0x00000000, 0xb775d5f6, 0x00000000, 0xb775d5f5,
  0x00000000, 0xb676d5f6, 0x00000000, 0xb676d5f5, 0x00000000, 0x6141f31a,
  0x00000000, 0x00000000, 0xffffffff, 0xb776d5f6, 0xffffffff, 0xb776d5f5,
  0xffff0000, 0xb776d5f6, 0xffff0000, 0xb776d5f5, 0xfff00000, 0xb776d5f6,
  0xfff00000, 0xb776d5f5, 0xa9cb1d25, 0x00000000, 0x80000000, 0xb776d5f6,
  0x80000000, 0xffffffff, 0x48892a0b, 0xa9cb1d24, 0x00100001, 0x00000000,
  0x00100000, 0xffffffff, 0x00010001, 0x00000000, 0x00010000, 0xffffffff,
  0x00000002, 0x00000000, 0x00000001, 0xffffffff, 0x00000001, 0x01000000,
  0x00000001, 0x00ffffff, 0x00000001, 0x00010000, 0x00000001, 0x0000ffff,
  0x00000001, 0x00008000, 0x00000001, 0x00007fff, 0x00000001, 0x00000001,
  0x00000001, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0xfffffffe,
  0x00000000, 0xfffffffd, 0x00000000, 0xffff8000, 0x00000000, 0xffff7fff,
  0x00000000, 0xffff0000, 0x00000000, 0xfffeffff, 0x00000000, 0xff000000,
  0x00000000, 0xfeffffff, 0x00000000, 0xa9cb1d24, 0x00000000, 0x48892a0a,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffff0001, 0x00000000,
  0xffff0000, 0xffffffff, 0xfff00001, 0x00000000, 0xfff00000, 0xffffffff,
  0xa9cb1d25, 0x48892a0a, 0x80000001, 0x00000000, 0x80000001, 0x00000000,
  0x48892a0b, 0xa9cb1d25, 0x00100001, 0x00000001, 0x00100001, 0x00000000,
  0x00010001, 0x00000001, 0x00010001, 0x00000000, 0x00000002, 0x00000001,
  0x00000002, 0x00000000, 0x00000001, 0x01000001, 0x00000001, 0x01000000,
  0x00000001, 0x00010001, 0x00000001, 0x00010000, 0x00000001, 0x00008001,
  0x00000001, 0x00008000, 0x00000001, 0x00000002, 0x00000001, 0x00000001,
  0x00000001, 0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0xfffffffe,
  0x00000000, 0xffff8001, 0x00000000, 0xffff8000, 0x00000000, 0xffff0001,
  0x00000000, 0xffff0000, 0x00000000, 0xff000001, 0x00000000, 0xff000000,
  0x00000000, 0xa9cb1d25, 0x00000000, 0x48892a0b, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xffff0001, 0x00000001, 0xffff0001, 0x00000000,
  0xfff00001, 0x00000001, 0xfff00001, 0x00000000, 0xa9cb1d25, 0x48892a0b,
  0x80000001, 0x00000001, 0x8000ffff, 0xffffffff, 0x488a2a0a, 0xa9cb1d24,
  0x00110000, 0x00000000, 0x0010ffff, 0xffffffff, 0x00020000, 0x00000000,
  0x0001ffff, 0xffffffff, 0x00010001, 0x00000000, 0x00010000, 0xffffffff,
  0x00010000, 0x01000000, 0x00010000, 0x00ffffff, 0x00010000, 0x00010000,
  0x00010000, 0x0000ffff, 0x00010000, 0x00008000, 0x00010000, 0x00007fff,
  0x00010000, 0x00000001, 0x00010000, 0x00000000, 0x0000ffff, 0xffffffff,
  0x0000ffff, 0xfffffffe, 0x0000ffff, 0xfffffffd, 0x0000ffff, 0xffff8000,
  0x0000ffff, 0xffff7fff, 0x0000ffff, 0xffff0000, 0x0000ffff, 0xfffeffff,
  0x0000ffff, 0xff000000, 0x0000ffff, 0xfeffffff, 0x0000ffff, 0xa9cb1d24,
  0x0000ffff, 0x48892a0a, 0x0000ffff, 0x00000000, 0x0000fffe, 0xffffffff,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xfff10000, 0x00000000,
  0xfff0ffff, 0xffffffff, 0xa9cc1d24, 0x48892a0a, 0x80010000, 0x00000000,
  0x80010000, 0x00000000, 0x488a2a0a, 0xa9cb1d25, 0x00110000, 0x00000001,
  0x00110000, 0x00000000, 0x00020000, 0x00000001, 0x00020000, 0x00000000,
  0x00010001, 0x00000001, 0x00010001, 0x00000000, 0x00010000, 0x01000001,
  0x00010000, 0x01000000, 0x00010000, 0x00010001, 0x00010000, 0x00010000,
  0x00010000, 0x00008001, 0x00010000, 0x00008000, 0x00010000, 0x00000002,
  0x00010000, 0x00000001, 0x00010000, 0x00000000, 0x0000ffff, 0xffffffff,
  0x0000ffff, 0xfffffffe, 0x0000ffff, 0xffff8001, 0x0000ffff, 0xffff8000,
  0x0000ffff, 0xffff0001, 0x0000ffff, 0xffff0000, 0x0000ffff, 0xff000001,
  0x0000ffff, 0xff000000, 0x0000ffff, 0xa9cb1d25, 0x0000ffff, 0x48892a0b,
  0x0000ffff, 0x00000001, 0x0000ffff, 0x00000000, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xfff10000, 0x00000001, 0xfff10000, 0x00000000,
  0xa9cc1d24, 0x48892a0b, 0x80010000, 0x00000001, 0x800fffff, 0xffffffff,
  0x48992a0a, 0xa9cb1d24, 0x00200000, 0x00000000, 0x001fffff, 0xffffffff,
  0x00110000, 0x00000000, 0x0010ffff, 0xffffffff, 0x00100001, 0x00000000,
  0x00100000, 0xffffffff, 0x00100000, 0x01000000, 0x00100000, 0x00ffffff,
  0x00100000, 0x00010000, 0x00100000, 0x0000ffff, 0x00100000, 0x00008000,
  0x00100000, 0x00007fff, 0x00100000, 0x00000001, 0x00100000, 0x00000000,
  0x000fffff, 0xffffffff, 0x000fffff, 0xfffffffe, 0x000fffff, 0xfffffffd,
  0x000fffff, 0xffff8000, 0x000fffff, 0xffff7fff, 0x000fffff, 0xffff0000,
  0x000fffff, 0xfffeffff, 0x000fffff, 0xff000000, 0x000fffff, 0xfeffffff,
  0x000fffff, 0xa9cb1d24, 0x000fffff, 0x48892a0a, 0x000fffff, 0x00000000,
  0x000ffffe, 0xffffffff, 0x000f0000, 0x00000000, 0x000effff, 0xffffffff,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xa9db1d24, 0x48892a0a,
  0x80100000, 0x00000000, 0x80100000, 0x00000000, 0x48992a0a, 0xa9cb1d25,
  0x00200000, 0x00000001, 0x00200000, 0x00000000, 0x00110000, 0x00000001,
  0x00110000, 0x00000000, 0x00100001, 0x00000001, 0x00100001, 0x00000000,
  0x00100000, 0x01000001, 0x00100000, 0x01000000, 0x00100000, 0x00010001,
  0x00100000, 0x00010000, 0x00100000, 0x00008001, 0x00100000, 0x00008000,
  0x00100000, 0x00000002, 0x00100000, 0x00000001, 0x00100000, 0x00000000,
  0x000fffff, 0xffffffff, 0x000fffff, 0xfffffffe, 0x000fffff, 0xffff8001,
  0x000fffff, 0xffff8000, 0x000fffff, 0xffff0001, 0x000fffff, 0xffff0000,
  0x000fffff, 0xff000001, 0x000fffff, 0xff000000, 0x000fffff, 0xa9cb1d25,
  0x000fffff, 0x48892a0b, 0x000fffff, 0x00000001, 0x000fffff, 0x00000000,
  0x000f0000, 0x00000001, 0x000f0000, 0x00000000, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0xa9db1d24, 0x48892a0b, 0x80100000, 0x00000001,
  0xd634e2db, 0xb776d5f5, 0x9ebe0ce6, 0x6141f31a, 0x5644e2db, 0xb776d5f6,
  0x5644e2db, 0xb776d5f5, 0x5635e2db, 0xb776d5f6, 0x5635e2db, 0xb776d5f5,
  0x5634e2dc, 0xb776d5f6, 0x5634e2dc, 0xb776d5f5, 0x5634e2db, 0xb876d5f6,
  0x5634e2db, 0xb876d5f5, 0x5634e2db, 0xb777d5f6, 0x5634e2db, 0xb777d5f5,
  0x5634e2db, 0xb77755f6, 0x5634e2db, 0xb77755f5, 0x5634e2db, 0xb776d5f7,
  0x5634e2db, 0xb776d5f6, 0x5634e2db, 0xb776d5f5, 0x5634e2db, 0xb776d5f4,
  0x5634e2db, 0xb776d5f3, 0x5634e2db, 0xb77655f6, 0x5634e2db, 0xb77655f5,
  0x5634e2db, 0xb775d5f6, 0x5634e2db, 0xb775d5f5, 0x5634e2db, 0xb676d5f6,
  0x5634e2db, 0xb676d5f5, 0x5634e2db, 0x6141f31a, 0x5634e2db, 0x00000000,
  0x5634e2da, 0xb776d5f6, 0x5634e2da, 0xb776d5f5, 0x5633e2db, 0xb776d5f6,
  0x5633e2db, 0xb776d5f5, 0x5624e2db, 0xb776d5f6, 0x5624e2db, 0xb776d5f5,
  0x00000000, 0x00000000, 0xd634e2db, 0xb776d5f6, 0xffffffff, 0xffffffff,
  0xc8892a0a, 0xa9cb1d24, 0x80100000, 0x00000000, 0x800fffff, 0xffffffff,
  0x80010000, 0x00000000, 0x8000ffff, 0xffffffff, 0x80000001, 0x00000000,
  0x80000000, 0xffffffff, 0x80000000, 0x01000000, 0x80000000, 0x00ffffff,
  0x80000000, 0x00010000, 0x80000000, 0x0000ffff, 0x80000000, 0x00008000,
  0x80000000, 0x00007fff, 0x80000000, 0x00000001, 0x80000000, 0x00000000,
  0x7fffffff, 0xffffffff, 0x7fffffff, 0xfffffffe, 0x7fffffff, 0xfffffffd,
  0x7fffffff, 0xffff8000, 0x7fffffff, 0xffff7fff, 0x7fffffff, 0xffff0000,
  0x7fffffff, 0xfffeffff, 0x7fffffff, 0xff000000, 0x7fffffff, 0xfeffffff,
  0x7fffffff, 0xa9cb1d24, 0x7fffffff, 0x48892a0a, 0x7fffffff, 0x00000000,
  0x7ffffffe, 0xffffffff, 0x7fff0000, 0x00000000, 0x7ffeffff, 0xffffffff,
  0x7ff00000, 0x00000000, 0x7fefffff, 0xffffffff, 0x29cb1d24, 0x48892a0a,
  0x00000000, 0x00000000
])

var TEST_MUL_BITS = i32array([
  0x80000000, 0x00000000, 0x80000000, 0x00000000, 0x1ad92a0a, 0xa9cb1d25,
  0x00000000, 0x00000000, 0xd2500000, 0x00000000, 0x00100000, 0x00000000,
  0x80000000, 0x00000000, 0x65ae2a0a, 0xa9cb1d25, 0x00110000, 0x00000001,
  0x00100000, 0x00000000, 0x00000000, 0x00000000, 0x1d250000, 0x00000000,
  0x00010000, 0x00000000, 0x00000000, 0x00000000, 0x00010000, 0x00000000,
  0x80000000, 0x00000000, 0xf254472f, 0xa9cb1d25, 0x00100001, 0x00000001,
  0x00100000, 0x00000000, 0x00010001, 0x00000001, 0x00010000, 0x00000000,
  0x00000000, 0x00000000, 0xa9cb1d25, 0x00000000, 0x00000001, 0x00000000,
  0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000,
  0x00000001, 0x00000000, 0x80000000, 0x00000000, 0x5332f527, 0xcecb1d25,
  0x00100000, 0x01000001, 0x00100000, 0x00000000, 0x00010000, 0x01000001,
  0x00010000, 0x00000000, 0x01000001, 0x01000001, 0x01000001, 0x00000000,
  0x00000000, 0x00000000, 0x0aa9cb1d, 0x25000000, 0x00000000, 0x01000000,
  0x00000000, 0x00000000, 0x00000000, 0x01000000, 0x00000000, 0x00000000,
  0x01000000, 0x01000000, 0x01000000, 0x00000000, 0x00010000, 0x01000000,
  0x80000000, 0x00000000, 0x7293d3d5, 0xc6f01d25, 0x00100000, 0x00010001,
  0x00100000, 0x00000000, 0x00010000, 0x00010001, 0x00010000, 0x00000000,
  0x00010001, 0x00010001, 0x00010001, 0x00000000, 0x00000100, 0x01010001,
  0x00000100, 0x01000000, 0x00000000, 0x00000000, 0x2a0aa9cb, 0x1d250000,
  0x00000000, 0x00010000, 0x00000000, 0x00000000, 0x00000000, 0x00010000,
  0x00000000, 0x00000000, 0x00010000, 0x00010000, 0x00010000, 0x00000000,
  0x00000100, 0x00010000, 0x00000100, 0x00000000, 0x00000001, 0x00010000,
  0x80000000, 0x00000000, 0xdd8e7ef0, 0x385d9d25, 0x00100000, 0x00008001,
  0x00100000, 0x00000000, 0x80010000, 0x00008001, 0x80010000, 0x00000000,
  0x00008001, 0x00008001, 0x00008001, 0x00000000, 0x00000080, 0x01008001,
  0x00000080, 0x01000000, 0x00000000, 0x80018001, 0x00000000, 0x80010000,
  0x00000000, 0x00000000, 0x950554e5, 0x8e928000, 0x00000000, 0x00008000,
  0x00000000, 0x00000000, 0x80000000, 0x00008000, 0x80000000, 0x00000000,
  0x00008000, 0x00008000, 0x00008000, 0x00000000, 0x00000080, 0x00008000,
  0x00000080, 0x00000000, 0x00000000, 0x80008000, 0x00000000, 0x80000000,
  0x00000000, 0x40008000, 0x00000000, 0x00000000, 0x91125415, 0x53963a4a,
  0x00200000, 0x00000002, 0x00200000, 0x00000000, 0x00020000, 0x00000002,
  0x00020000, 0x00000000, 0x00000002, 0x00000002, 0x00000002, 0x00000000,
  0x00000000, 0x02000002, 0x00000000, 0x02000000, 0x00000000, 0x00020002,
  0x00000000, 0x00020000, 0x00000000, 0x00010002, 0x00000000, 0x00010000,
  0x80000000, 0x00000000, 0x48892a0a, 0xa9cb1d25, 0x00100000, 0x00000001,
  0x00100000, 0x00000000, 0x00010000, 0x00000001, 0x00010000, 0x00000000,
  0x00000001, 0x00000001, 0x00000001, 0x00000000, 0x00000000, 0x01000001,
  0x00000000, 0x01000000, 0x00000000, 0x00010001, 0x00000000, 0x00010000,
  0x00000000, 0x00008001, 0x00000000, 0x00008000, 0x00000000, 0x00000002,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x80000000, 0x00000000, 0xb776d5f5, 0x5634e2db,
  0xffefffff, 0xffffffff, 0xfff00000, 0x00000000, 0xfffeffff, 0xffffffff,
  0xffff0000, 0x00000000, 0xfffffffe, 0xffffffff, 0xffffffff, 0x00000000,
  0xffffffff, 0xfeffffff, 0xffffffff, 0xff000000, 0xffffffff, 0xfffeffff,
  0xffffffff, 0xffff0000, 0xffffffff, 0xffff7fff, 0xffffffff, 0xffff8000,
  0xffffffff, 0xfffffffe, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x6eedabea, 0xac69c5b6, 0xffdfffff, 0xfffffffe,
  0xffe00000, 0x00000000, 0xfffdffff, 0xfffffffe, 0xfffe0000, 0x00000000,
  0xfffffffd, 0xfffffffe, 0xfffffffe, 0x00000000, 0xffffffff, 0xfdfffffe,
  0xffffffff, 0xfe000000, 0xffffffff, 0xfffdfffe, 0xffffffff, 0xfffe0000,
  0xffffffff, 0xfffefffe, 0xffffffff, 0xffff0000, 0xffffffff, 0xfffffffc,
  0xffffffff, 0xfffffffe, 0x00000000, 0x00000000, 0x00000000, 0x00000002,
  0x80000000, 0x00000000, 0xb383d525, 0x1b389d25, 0x000fffff, 0xffff8001,
  0x00100000, 0x00000000, 0x8000ffff, 0xffff8001, 0x80010000, 0x00000000,
  0xffff8000, 0xffff8001, 0xffff8001, 0x00000000, 0xffffff80, 0x00ff8001,
  0xffffff80, 0x01000000, 0xffffffff, 0x80008001, 0xffffffff, 0x80010000,
  0xffffffff, 0xc0000001, 0xffffffff, 0xc0008000, 0xffffffff, 0xffff0002,
  0xffffffff, 0xffff8001, 0x00000000, 0x00000000, 0x00000000, 0x00007fff,
  0x00000000, 0x0000fffe, 0x00000000, 0x00000000, 0x6afaab1a, 0x716d8000,
  0xffffffff, 0xffff8000, 0x00000000, 0x00000000, 0x7fffffff, 0xffff8000,
  0x80000000, 0x00000000, 0xffff7fff, 0xffff8000, 0xffff8000, 0x00000000,
  0xffffff7f, 0xffff8000, 0xffffff80, 0x00000000, 0xffffffff, 0x7fff8000,
  0xffffffff, 0x80000000, 0xffffffff, 0xbfff8000, 0xffffffff, 0xc0000000,
  0xffffffff, 0xffff0000, 0xffffffff, 0xffff8000, 0x00000000, 0x00000000,
  0x00000000, 0x00008000, 0x00000000, 0x00010000, 0x00000000, 0x3fff8000,
  0x80000000, 0x00000000, 0x1e7e803f, 0x8ca61d25, 0x000fffff, 0xffff0001,
  0x00100000, 0x00000000, 0x0000ffff, 0xffff0001, 0x00010000, 0x00000000,
  0xffff0000, 0xffff0001, 0xffff0001, 0x00000000, 0xffffff00, 0x00ff0001,
  0xffffff00, 0x01000000, 0xffffffff, 0x00000001, 0xffffffff, 0x00010000,
  0xffffffff, 0x7fff8001, 0xffffffff, 0x80008000, 0xffffffff, 0xfffe0002,
  0xffffffff, 0xffff0001, 0x00000000, 0x00000000, 0x00000000, 0x0000ffff,
  0x00000000, 0x0001fffe, 0x00000000, 0x7ffe8001, 0x00000000, 0x7fff8000,
  0x00000000, 0x00000000, 0xd5f55634, 0xe2db0000, 0xffffffff, 0xffff0000,
  0x00000000, 0x00000000, 0xffffffff, 0xffff0000, 0x00000000, 0x00000000,
  0xfffeffff, 0xffff0000, 0xffff0000, 0x00000000, 0xfffffeff, 0xffff0000,
  0xffffff00, 0x00000000, 0xfffffffe, 0xffff0000, 0xffffffff, 0x00000000,
  0xffffffff, 0x7fff0000, 0xffffffff, 0x80000000, 0xffffffff, 0xfffe0000,
  0xffffffff, 0xffff0000, 0x00000000, 0x00000000, 0x00000000, 0x00010000,
  0x00000000, 0x00020000, 0x00000000, 0x7fff0000, 0x00000000, 0x80000000,
  0x00000000, 0xffff0000, 0x80000000, 0x00000000, 0x3ddf5eed, 0x84cb1d25,
  0x000fffff, 0xff000001, 0x00100000, 0x00000000, 0x0000ffff, 0xff000001,
  0x00010000, 0x00000000, 0xff000000, 0xff000001, 0xff000001, 0x00000000,
  0xffff0000, 0x00000001, 0xffff0000, 0x01000000, 0xfffffeff, 0xff010001,
  0xffffff00, 0x00010000, 0xffffff7f, 0xff008001, 0xffffff80, 0x00008000,
  0xffffffff, 0xfe000002, 0xffffffff, 0xff000001, 0x00000000, 0x00000000,
  0x00000000, 0x00ffffff, 0x00000000, 0x01fffffe, 0x0000007f, 0xfeff8001,
  0x0000007f, 0xffff8000, 0x000000ff, 0xfeff0001, 0x000000ff, 0xffff0000,
  0x00000000, 0x00000000, 0xf55634e2, 0xdb000000, 0xffffffff, 0xff000000,
  0x00000000, 0x00000000, 0xffffffff, 0xff000000, 0x00000000, 0x00000000,
  0xfeffffff, 0xff000000, 0xff000000, 0x00000000, 0xfffeffff, 0xff000000,
  0xffff0000, 0x00000000, 0xfffffeff, 0xff000000, 0xffffff00, 0x00000000,
  0xffffff7f, 0xff000000, 0xffffff80, 0x00000000, 0xffffffff, 0xfe000000,
  0xffffffff, 0xff000000, 0x00000000, 0x00000000, 0x00000000, 0x01000000,
  0x00000000, 0x02000000, 0x0000007f, 0xff000000, 0x00000080, 0x00000000,
  0x000000ff, 0xff000000, 0x00000100, 0x00000000, 0x0000ffff, 0xff000000,
  0x80000000, 0x00000000, 0xbc56e5ef, 0x15ff6759, 0xd24fffff, 0xa9cb1d25,
  0xd2500000, 0x00000000, 0x1d24ffff, 0xa9cb1d25, 0x1d250000, 0x00000000,
  0xa9cb1d24, 0xa9cb1d25, 0xa9cb1d25, 0x00000000, 0xffa9cb1c, 0xcecb1d25,
  0xffa9cb1d, 0x25000000, 0xffffa9ca, 0xc6f01d25, 0xffffa9cb, 0x1d250000,
  0xffffd4e5, 0x385d9d25, 0xffffd4e5, 0x8e928000, 0xffffffff, 0x53963a4a,
  0xffffffff, 0xa9cb1d25, 0x00000000, 0x00000000, 0x00000000, 0x5634e2db,
  0x00000000, 0xac69c5b6, 0x00002b1a, 0x1b389d25, 0x00002b1a, 0x716d8000,
  0x00005634, 0x8ca61d25, 0x00005634, 0xe2db0000, 0x005634e2, 0x84cb1d25,
  0x005634e2, 0xdb000000, 0x80000000, 0x00000000, 0x74756f10, 0x9f4f5297,
  0xa0afffff, 0x48892a0b, 0xa0b00000, 0x00000000, 0x2a0affff, 0x48892a0b,
  0x2a0b0000, 0x00000000, 0x48892a0a, 0x48892a0b, 0x48892a0b, 0x00000000,
  0xff488929, 0x53892a0b, 0xff48892a, 0x0b000000, 0xffff4888, 0x72942a0b,
  0xffff4889, 0x2a0b0000, 0xffffa443, 0xdd8eaa0b, 0xffffa444, 0x95058000,
  0xfffffffe, 0x91125416, 0xffffffff, 0x48892a0b, 0x00000000, 0x00000000,
  0x00000000, 0xb776d5f5, 0x00000001, 0x6eedabea, 0x00005bba, 0xb383aa0b,
  0x00005bbb, 0x6afa8000, 0x0000b776, 0x1e7e2a0b, 0x0000b776, 0xd5f50000,
  0x00b776d5, 0x3d892a0b, 0x00b776d5, 0xf5000000, 0x3dc7d297, 0x9f4f5297,
  0x80000000, 0x00000000, 0x9ebe0ce5, 0xa9cb1d25, 0x000fffff, 0x00000001,
  0x00100000, 0x00000000, 0x0000ffff, 0x00000001, 0x00010000, 0x00000000,
  0x00000000, 0x00000001, 0x00000001, 0x00000000, 0xfeffffff, 0x01000001,
  0xff000000, 0x01000000, 0xfffeffff, 0x00010001, 0xffff0000, 0x00010000,
  0xffff7fff, 0x00008001, 0xffff8000, 0x00008000, 0xfffffffe, 0x00000002,
  0xffffffff, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0xffffffff,
  0x00000001, 0xfffffffe, 0x00007ffe, 0xffff8001, 0x00007fff, 0xffff8000,
  0x0000fffe, 0xffff0001, 0x0000ffff, 0xffff0000, 0x00fffffe, 0xff000001,
  0x00ffffff, 0xff000000, 0x5634e2da, 0xa9cb1d25, 0xb776d5f4, 0x48892a0b,
  0x00000000, 0x00000000, 0x5634e2db, 0x00000000, 0xffffffff, 0x00000000,
  0x00000000, 0x00000000, 0xffffffff, 0x00000000, 0x00000000, 0x00000000,
  0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0xfeffffff, 0x00000000,
  0xff000000, 0x00000000, 0xfffeffff, 0x00000000, 0xffff0000, 0x00000000,
  0xffff7fff, 0x00000000, 0xffff8000, 0x00000000, 0xfffffffe, 0x00000000,
  0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000,
  0x00000002, 0x00000000, 0x00007fff, 0x00000000, 0x00008000, 0x00000000,
  0x0000ffff, 0x00000000, 0x00010000, 0x00000000, 0x00ffffff, 0x00000000,
  0x01000000, 0x00000000, 0x5634e2db, 0x00000000, 0xb776d5f5, 0x00000000,
  0xffffffff, 0x00000000, 0x80000000, 0x00000000, 0x2b642a0a, 0xa9cb1d25,
  0x000f0000, 0x00000001, 0x00100000, 0x00000000, 0x00000000, 0x00000001,
  0x00010000, 0x00000000, 0xffff0001, 0x00000001, 0x00000001, 0x00000000,
  0xffff0000, 0x01000001, 0x00000000, 0x01000000, 0xffff0000, 0x00010001,
  0x00000000, 0x00010000, 0x7fff0000, 0x00008001, 0x80000000, 0x00008000,
  0xfffe0000, 0x00000002, 0xffff0000, 0x00000001, 0x00000000, 0x00000000,
  0x0000ffff, 0xffffffff, 0x0001ffff, 0xfffffffe, 0x7ffeffff, 0xffff8001,
  0x7fffffff, 0xffff8000, 0xfffeffff, 0xffff0001, 0xffffffff, 0xffff0000,
  0xfffeffff, 0xff000001, 0xffffffff, 0xff000000, 0xe2daffff, 0xa9cb1d25,
  0xd5f4ffff, 0x48892a0b, 0xfffeffff, 0x00000001, 0xffffffff, 0x00000000,
  0x00000000, 0x00000000, 0xe2db0000, 0x00000000, 0xffff0000, 0x00000000,
  0x00000000, 0x00000000, 0xffff0000, 0x00000000, 0x00000000, 0x00000000,
  0xffff0000, 0x00000000, 0x00000000, 0x00000000, 0xffff0000, 0x00000000,
  0x00000000, 0x00000000, 0xffff0000, 0x00000000, 0x00000000, 0x00000000,
  0x7fff0000, 0x00000000, 0x80000000, 0x00000000, 0xfffe0000, 0x00000000,
  0xffff0000, 0x00000000, 0x00000000, 0x00000000, 0x00010000, 0x00000000,
  0x00020000, 0x00000000, 0x7fff0000, 0x00000000, 0x80000000, 0x00000000,
  0xffff0000, 0x00000000, 0x00000000, 0x00000000, 0xffff0000, 0x00000000,
  0x00000000, 0x00000000, 0xe2db0000, 0x00000000, 0xd5f50000, 0x00000000,
  0xffff0000, 0x00000000, 0x00000000, 0x00000000, 0xffff0000, 0x00000000,
  0x80000000, 0x00000000, 0x76392a0a, 0xa9cb1d25, 0x00000000, 0x00000001,
  0x00100000, 0x00000000, 0xfff10000, 0x00000001, 0x00010000, 0x00000000,
  0xfff00001, 0x00000001, 0x00000001, 0x00000000, 0xfff00000, 0x01000001,
  0x00000000, 0x01000000, 0xfff00000, 0x00010001, 0x00000000, 0x00010000,
  0xfff00000, 0x00008001, 0x00000000, 0x00008000, 0xffe00000, 0x00000002,
  0xfff00000, 0x00000001, 0x00000000, 0x00000000, 0x000fffff, 0xffffffff,
  0x001fffff, 0xfffffffe, 0xffefffff, 0xffff8001, 0xffffffff, 0xffff8000,
  0xffefffff, 0xffff0001, 0xffffffff, 0xffff0000, 0xffefffff, 0xff000001,
  0xffffffff, 0xff000000, 0x2dafffff, 0xa9cb1d25, 0x5f4fffff, 0x48892a0b,
  0xffefffff, 0x00000001, 0xffffffff, 0x00000000, 0xffef0000, 0x00000001,
  0xffff0000, 0x00000000, 0x00000000, 0x00000000, 0x2db00000, 0x00000000,
  0xfff00000, 0x00000000, 0x00000000, 0x00000000, 0xfff00000, 0x00000000,
  0x00000000, 0x00000000, 0xfff00000, 0x00000000, 0x00000000, 0x00000000,
  0xfff00000, 0x00000000, 0x00000000, 0x00000000, 0xfff00000, 0x00000000,
  0x00000000, 0x00000000, 0xfff00000, 0x00000000, 0x00000000, 0x00000000,
  0xffe00000, 0x00000000, 0xfff00000, 0x00000000, 0x00000000, 0x00000000,
  0x00100000, 0x00000000, 0x00200000, 0x00000000, 0xfff00000, 0x00000000,
  0x00000000, 0x00000000, 0xfff00000, 0x00000000, 0x00000000, 0x00000000,
  0xfff00000, 0x00000000, 0x00000000, 0x00000000, 0x2db00000, 0x00000000,
  0x5f500000, 0x00000000, 0xfff00000, 0x00000000, 0x00000000, 0x00000000,
  0xfff00000, 0x00000000, 0x00000000, 0x00000000, 0xfff00000, 0x00000000,
  0x80000000, 0x00000000, 0x8a74d669, 0x9f4f5297, 0x4a7b1d24, 0x48892a0b,
  0xa0b00000, 0x00000000, 0xd3d61d24, 0x48892a0b, 0x2a0b0000, 0x00000000,
  0xf254472f, 0x48892a0b, 0x48892a0b, 0x00000000, 0xce13a64e, 0x53892a0b,
  0x2448892a, 0x0b000000, 0xc6ef65ad, 0x72942a0b, 0x1d244889, 0x2a0b0000,
  0x385d4168, 0xdd8eaa0b, 0x8e922444, 0x95058000, 0x53963a48, 0x91125416,
  0xa9cb1d24, 0x48892a0b, 0x00000000, 0x00000000, 0x5634e2db, 0xb776d5f5,
  0xac69c5b7, 0x6eedabea, 0x1b38f8df, 0xb383aa0b, 0x716ddbbb, 0x6afa8000,
  0x8ca6d49b, 0x1e7e2a0b, 0xe2dbb776, 0xd5f50000, 0x858293fa, 0x3d892a0b,
  0xdbb776d5, 0xf5000000, 0x53c739f0, 0x9f4f5297, 0x22ca6fa5, 0x36ad9c79,
  0x6141f319, 0x48892a0b, 0xb776d5f5, 0x00000000, 0x7fc01d24, 0x48892a0b,
  0xd5f50000, 0x00000000, 0x091b1d24, 0x48892a0b, 0x5f500000, 0x00000000,
  0x80000000, 0x00000000, 0xc8892a0a, 0xa9cb1d25, 0x80100000, 0x00000001,
  0x00100000, 0x00000000, 0x80010000, 0x00000001, 0x00010000, 0x00000000,
  0x80000001, 0x00000001, 0x00000001, 0x00000000, 0x80000000, 0x01000001,
  0x00000000, 0x01000000, 0x80000000, 0x00010001, 0x00000000, 0x00010000,
  0x80000000, 0x00008001, 0x00000000, 0x00008000, 0x00000000, 0x00000002,
  0x80000000, 0x00000001, 0x00000000, 0x00000000, 0x7fffffff, 0xffffffff,
  0xffffffff, 0xfffffffe, 0x7fffffff, 0xffff8001, 0xffffffff, 0xffff8000,
  0x7fffffff, 0xffff0001, 0xffffffff, 0xffff0000, 0x7fffffff, 0xff000001,
  0xffffffff, 0xff000000, 0x7fffffff, 0xa9cb1d25, 0x7fffffff, 0x48892a0b,
  0x7fffffff, 0x00000001, 0xffffffff, 0x00000000, 0x7fff0000, 0x00000001,
  0xffff0000, 0x00000000, 0x7ff00000, 0x00000001, 0xfff00000, 0x00000000,
  0x29cb1d24, 0x48892a0b
])

var TEST_DIV_BITS = i32array([
  0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x000007ff,
  0x00000000, 0x00000800, 0x00000000, 0x00007fff, 0x00000000, 0x00008000,
  0x00000000, 0x7fffffff, 0x00000000, 0x80000000, 0x0000007f, 0xffff8000,
  0x00000080, 0x00000000, 0x00007fff, 0x80007fff, 0x00008000, 0x00000000,
  0x0000fffe, 0x0003fff8, 0x00010000, 0x00000000, 0x40000000, 0x00000000,
  0x80000000, 0x00000000, 0x80000000, 0x00000000, 0xc0000000, 0x00000000,
  0xfffefffd, 0xfffbfff8, 0xffff0000, 0x00000000, 0xffff7fff, 0x7fff8000,
  0xffff8000, 0x00000000, 0xffffff7f, 0xffff8000, 0xffffff80, 0x00000000,
  0xfffffffe, 0x83e3cc1a, 0xffffffff, 0x4d64985a, 0xffffffff, 0x80000000,
  0xffffffff, 0x80000000, 0xffffffff, 0xffff8000, 0xffffffff, 0xffff8000,
  0xffffffff, 0xfffff800, 0xffffffff, 0xfffff800, 0xffffffff, 0xffffffff,
  0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000001,
  0x00000000, 0x00000488, 0x00000000, 0x00000488, 0x00000000, 0x00004889,
  0x00000000, 0x00004889, 0x00000000, 0x48892a0a, 0x00000000, 0x48892a0a,
  0x00000048, 0x8929c220, 0x00000048, 0x892a0aa9, 0x00004888, 0xe181c849,
  0x00004889, 0x2a0aa9cb, 0x00009111, 0x31f2efb0, 0x00009112, 0x54155396,
  0x24449505, 0x54e58e92, 0x48892a0a, 0xa9cb1d25, 0xb776d5f5, 0x5634e2db,
  0xdbbb6afa, 0xab1a716e, 0xffff6eec, 0x89c3bff2, 0xffff6eed, 0xabeaac6a,
  0xffffb776, 0x8d6be3a1, 0xffffb776, 0xd5f55635, 0xffffffb7, 0x76d5acce,
  0xffffffb7, 0x76d5f557, 0xffffffff, 0x2898cfc6, 0xffffffff, 0x9ac930b4,
  0xffffffff, 0xb776d5f6, 0xffffffff, 0xb776d5f6, 0xffffffff, 0xffffb777,
  0xffffffff, 0xffffb777, 0xffffffff, 0xfffffb78, 0xffffffff, 0xfffffb78,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001,
  0x00000000, 0x0000000f, 0x00000000, 0x00000010, 0x00000000, 0x000fffff,
  0x00000000, 0x00100000, 0x00000000, 0x0ffffff0, 0x00000000, 0x10000000,
  0x0000000f, 0xfff0000f, 0x00000010, 0x00000000, 0x0000001f, 0xffc0007f,
  0x00000020, 0x00000000, 0x00080000, 0x00000000, 0x00100000, 0x00000001,
  0xffefffff, 0xffffffff, 0xfff80000, 0x00000000, 0xffffffdf, 0xffbfff80,
  0xffffffe0, 0x00000000, 0xffffffef, 0xffeffff0, 0xfffffff0, 0x00000000,
  0xffffffff, 0xeffffff0, 0xffffffff, 0xf0000000, 0xffffffff, 0xffd07c7a,
  0xffffffff, 0xffe9ac94, 0xffffffff, 0xfff00000, 0xffffffff, 0xfff00000,
  0xffffffff, 0xfffffff0, 0xffffffff, 0xfffffff0, 0xffffffff, 0xffffffff,
  0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000001, 0x00000000, 0x0000000f, 0x00000000, 0x00000010,
  0x00000000, 0x000fffff, 0x00000000, 0x00100000, 0x00000000, 0x0ffffff0,
  0x00000000, 0x10000000, 0x0000000f, 0xfff0000f, 0x00000010, 0x00000000,
  0x0000001f, 0xffc0007f, 0x00000020, 0x00000000, 0x00080000, 0x00000000,
  0x00100000, 0x00000000, 0xfff00000, 0x00000000, 0xfff80000, 0x00000000,
  0xffffffdf, 0xffbfff80, 0xffffffe0, 0x00000000, 0xffffffef, 0xffeffff0,
  0xfffffff0, 0x00000000, 0xffffffff, 0xeffffff0, 0xffffffff, 0xf0000000,
  0xffffffff, 0xffd07c7a, 0xffffffff, 0xffe9ac94, 0xffffffff, 0xfff00000,
  0xffffffff, 0xfff00000, 0xffffffff, 0xfffffff0, 0xffffffff, 0xfffffff0,
  0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001,
  0x00000000, 0x00000001, 0x00000000, 0x0000ffff, 0x00000000, 0x00010000,
  0x00000000, 0x00ffffff, 0x00000000, 0x01000000, 0x00000000, 0xffff0001,
  0x00000001, 0x00000000, 0x00000001, 0xfffc0007, 0x00000002, 0x00000000,
  0x00008000, 0x00000000, 0x00010000, 0x00000001, 0xfffeffff, 0xffffffff,
  0xffff8000, 0x00000000, 0xfffffffd, 0xfffbfff8, 0xfffffffe, 0x00000000,
  0xfffffffe, 0xfffeffff, 0xffffffff, 0x00000000, 0xffffffff, 0xfeffffff,
  0xffffffff, 0xff000000, 0xffffffff, 0xfffd07c8, 0xffffffff, 0xfffe9aca,
  0xffffffff, 0xffff0000, 0xffffffff, 0xffff0000, 0xffffffff, 0xffffffff,
  0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x0000ffff,
  0x00000000, 0x00010000, 0x00000000, 0x00ffffff, 0x00000000, 0x01000000,
  0x00000000, 0xffff0000, 0x00000001, 0x00000000, 0x00000001, 0xfffc0007,
  0x00000002, 0x00000000, 0x00008000, 0x00000000, 0x00010000, 0x00000000,
  0xffff0000, 0x00000000, 0xffff8000, 0x00000000, 0xfffffffd, 0xfffbfff8,
  0xfffffffe, 0x00000000, 0xfffffffe, 0xfffeffff, 0xffffffff, 0x00000000,
  0xffffffff, 0xfeffffff, 0xffffffff, 0xff000000, 0xffffffff, 0xfffd07c8,
  0xffffffff, 0xfffe9aca, 0xffffffff, 0xffff0000, 0xffffffff, 0xffff0000,
  0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x000000ff,
  0x00000000, 0x00000100, 0x00000000, 0x0000ffff, 0x00000000, 0x00010000,
  0x00000000, 0x0001fffc, 0x00000000, 0x00020000, 0x00000000, 0x80000000,
  0x00000001, 0x00000001, 0xfffffffe, 0xffffffff, 0xffffffff, 0x80000000,
  0xffffffff, 0xfffdfffc, 0xffffffff, 0xfffe0000, 0xffffffff, 0xfffeffff,
  0xffffffff, 0xffff0000, 0xffffffff, 0xffffff00, 0xffffffff, 0xffffff00,
  0xffffffff, 0xfffffffe, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,
  0xffffffff, 0xffffffff, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001,
  0x00000000, 0x000000ff, 0x00000000, 0x00000100, 0x00000000, 0x0000ffff,
  0x00000000, 0x00010000, 0x00000000, 0x0001fffc, 0x00000000, 0x00020000,
  0x00000000, 0x80000000, 0x00000001, 0x00000000, 0xffffffff, 0x00000000,
  0xffffffff, 0x80000000, 0xffffffff, 0xfffdfffc, 0xffffffff, 0xfffe0000,
  0xffffffff, 0xfffeffff, 0xffffffff, 0xffff0000, 0xffffffff, 0xffffff00,
  0xffffffff, 0xffffff00, 0xffffffff, 0xfffffffe, 0xffffffff, 0xffffffff,
  0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001,
  0x00000000, 0x000000ff, 0x00000000, 0x00000100, 0x00000000, 0x000001ff,
  0x00000000, 0x00000200, 0x00000000, 0x00800000, 0x00000000, 0x01000001,
  0xffffffff, 0xfeffffff, 0xffffffff, 0xff800000, 0xffffffff, 0xfffffe00,
  0xffffffff, 0xfffffe00, 0xffffffff, 0xffffff00, 0xffffffff, 0xffffff00,
  0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000001, 0x00000000, 0x000000ff, 0x00000000, 0x00000100,
  0x00000000, 0x000001ff, 0x00000000, 0x00000200, 0x00000000, 0x00800000,
  0x00000000, 0x01000000, 0xffffffff, 0xff000000, 0xffffffff, 0xff800000,
  0xffffffff, 0xfffffe00, 0xffffffff, 0xfffffe00, 0xffffffff, 0xffffff00,
  0xffffffff, 0xffffff00, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001,
  0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000002,
  0x00000000, 0x00008000, 0x00000000, 0x00010001, 0xffffffff, 0xfffeffff,
  0xffffffff, 0xffff8000, 0xffffffff, 0xfffffffe, 0xffffffff, 0xfffffffe,
  0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000001,
  0x00000000, 0x00000002, 0x00000000, 0x00008000, 0x00000000, 0x00010000,
  0xffffffff, 0xffff0000, 0xffffffff, 0xffff8000, 0xffffffff, 0xfffffffe,
  0xffffffff, 0xfffffffe, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00004000,
  0x00000000, 0x00008001, 0xffffffff, 0xffff7fff, 0xffffffff, 0xffffc000,
  0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000001,
  0x00000000, 0x00004000, 0x00000000, 0x00008000, 0xffffffff, 0xffff8000,
  0xffffffff, 0xffffc000, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000001, 0x00000000, 0x00000002,
  0xffffffff, 0xfffffffe, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000001, 0xffffffff, 0xffffffff, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff,
  0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff,
  0xffffffff, 0xfffffffe, 0x00000000, 0x00000002, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0xffffffff, 0xffffc001, 0xffffffff, 0xffff8001, 0x00000000, 0x00007fff,
  0x00000000, 0x00003fff, 0x00000000, 0x00000001, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0xffffffff, 0xffffffff, 0xffffffff, 0xffffc000, 0xffffffff, 0xffff8000,
  0x00000000, 0x00008000, 0x00000000, 0x00004000, 0x00000000, 0x00000001,
  0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffff8001,
  0xffffffff, 0xffff0001, 0x00000000, 0x0000ffff, 0x00000000, 0x00007fff,
  0x00000000, 0x00000002, 0x00000000, 0x00000001, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffffffe,
  0xffffffff, 0xffff8000, 0xffffffff, 0xffff0000, 0x00000000, 0x00010000,
  0x00000000, 0x00008000, 0x00000000, 0x00000002, 0x00000000, 0x00000002,
  0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0xffffffff, 0xffffff01, 0xffffffff, 0xffffff01, 0xffffffff, 0xfffffe01,
  0xffffffff, 0xfffffe01, 0xffffffff, 0xff800001, 0xffffffff, 0xff000001,
  0x00000000, 0x00ffffff, 0x00000000, 0x007fffff, 0x00000000, 0x00000200,
  0x00000000, 0x000001ff, 0x00000000, 0x00000100, 0x00000000, 0x000000ff,
  0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0xffffffff, 0xffffffff, 0xffffffff, 0xffffff01, 0xffffffff, 0xffffff00,
  0xffffffff, 0xfffffe01, 0xffffffff, 0xfffffe00, 0xffffffff, 0xff800000,
  0xffffffff, 0xff000000, 0x00000000, 0x01000000, 0x00000000, 0x00800000,
  0x00000000, 0x00000200, 0x00000000, 0x00000200, 0x00000000, 0x00000100,
  0x00000000, 0x00000100, 0x00000000, 0x00000001, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0xffffffff, 0xffffffaa, 0xffffffff, 0xffffffaa, 0xffffffff, 0xffffa9cc,
  0xffffffff, 0xffffa9cc, 0xffffffff, 0xffff5398, 0xffffffff, 0xffff5397,
  0xffffffff, 0xd4e58e93, 0xffffffff, 0xa9cb1d25, 0x00000000, 0x5634e2db,
  0x00000000, 0x2b1a716d, 0x00000000, 0x0000ac6b, 0x00000000, 0x0000ac69,
  0x00000000, 0x00005635, 0x00000000, 0x00005634, 0x00000000, 0x00000056,
  0x00000000, 0x00000056, 0x00000000, 0x00000001, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0xffffffff, 0xffffff49, 0xffffffff, 0xffffff49,
  0xffffffff, 0xffff488a, 0xffffffff, 0xffff488a, 0xffffffff, 0xfffe9116,
  0xffffffff, 0xfffe9113, 0xffffffff, 0xa4449506, 0xffffffff, 0x48892a0b,
  0x00000000, 0xb776d5f5, 0x00000000, 0x5bbb6afa, 0x00000000, 0x00016ef0,
  0x00000000, 0x00016eed, 0x00000000, 0x0000b777, 0x00000000, 0x0000b776,
  0x00000000, 0x000000b7, 0x00000000, 0x000000b7, 0x00000000, 0x00000002,
  0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffff01,
  0xffffffff, 0xffffff01, 0xffffffff, 0xffff0001, 0xffffffff, 0xffff0001,
  0xffffffff, 0xfffe0004, 0xffffffff, 0xfffe0001, 0xffffffff, 0x80000001,
  0xffffffff, 0x00000001, 0x00000000, 0xffffffff, 0x00000000, 0x7fffffff,
  0x00000000, 0x00020004, 0x00000000, 0x0001ffff, 0x00000000, 0x00010001,
  0x00000000, 0x0000ffff, 0x00000000, 0x00000100, 0x00000000, 0x000000ff,
  0x00000000, 0x00000002, 0x00000000, 0x00000001, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff,
  0xffffffff, 0xffffff01, 0xffffffff, 0xffffff00, 0xffffffff, 0xffff0001,
  0xffffffff, 0xffff0000, 0xffffffff, 0xfffe0004, 0xffffffff, 0xfffe0000,
  0xffffffff, 0x80000000, 0xffffffff, 0x00000000, 0x00000001, 0x00000000,
  0x00000000, 0x80000000, 0x00000000, 0x00020004, 0x00000000, 0x00020000,
  0x00000000, 0x00010001, 0x00000000, 0x00010000, 0x00000000, 0x00000100,
  0x00000000, 0x00000100, 0x00000000, 0x00000002, 0x00000000, 0x00000001,
  0x00000000, 0x00000001, 0x00000000, 0x00000001, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffff0001,
  0xffffffff, 0xffff0001, 0xffffffff, 0xff000001, 0xffffffff, 0xff000001,
  0xffffffff, 0x00010000, 0xffffffff, 0x00000001, 0xfffffffe, 0x0003fff9,
  0xfffffffe, 0x00000001, 0xffff8000, 0x00000001, 0xffff0000, 0x00000001,
  0x0000ffff, 0xffffffff, 0x00007fff, 0xffffffff, 0x00000002, 0x00040008,
  0x00000001, 0xffffffff, 0x00000001, 0x00010001, 0x00000000, 0xffffffff,
  0x00000000, 0x01000001, 0x00000000, 0x00ffffff, 0x00000000, 0x0002f838,
  0x00000000, 0x00016536, 0x00000000, 0x00010000, 0x00000000, 0x0000ffff,
  0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff,
  0xffffffff, 0xffff0001, 0xffffffff, 0xffff0000, 0xffffffff, 0xff000001,
  0xffffffff, 0xff000000, 0xffffffff, 0x00010000, 0xffffffff, 0x00000000,
  0xfffffffe, 0x0003fff9, 0xfffffffe, 0x00000000, 0xffff8000, 0x00000000,
  0xffff0000, 0x00000000, 0x00010000, 0x00000000, 0x00008000, 0x00000000,
  0x00000002, 0x00040008, 0x00000002, 0x00000000, 0x00000001, 0x00010001,
  0x00000001, 0x00000000, 0x00000000, 0x01000001, 0x00000000, 0x01000000,
  0x00000000, 0x0002f838, 0x00000000, 0x00016536, 0x00000000, 0x00010000,
  0x00000000, 0x00010000, 0x00000000, 0x00000001, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xfffffff1,
  0xffffffff, 0xfffffff1, 0xffffffff, 0xfff00001, 0xffffffff, 0xfff00001,
  0xffffffff, 0xf0000010, 0xffffffff, 0xf0000001, 0xfffffff0, 0x000ffff1,
  0xfffffff0, 0x00000001, 0xffffffe0, 0x003fff81, 0xffffffe0, 0x00000001,
  0xfff80000, 0x00000001, 0xfff00000, 0x00000001, 0x000fffff, 0xffffffff,
  0x0007ffff, 0xffffffff, 0x00000020, 0x00400080, 0x0000001f, 0xffffffff,
  0x00000010, 0x00100010, 0x0000000f, 0xffffffff, 0x00000000, 0x10000010,
  0x00000000, 0x0fffffff, 0x00000000, 0x002f8386, 0x00000000, 0x0016536c,
  0x00000000, 0x00100000, 0x00000000, 0x000fffff, 0x00000000, 0x00000010,
  0x00000000, 0x0000000f, 0x00000000, 0x00000001, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff,
  0xffffffff, 0xfffffff1, 0xffffffff, 0xfffffff0, 0xffffffff, 0xfff00001,
  0xffffffff, 0xfff00000, 0xffffffff, 0xf0000010, 0xffffffff, 0xf0000000,
  0xfffffff0, 0x000ffff1, 0xfffffff0, 0x00000000, 0xffffffe0, 0x003fff81,
  0xffffffe0, 0x00000000, 0xfff80000, 0x00000000, 0xfff00000, 0x00000000,
  0x00100000, 0x00000000, 0x00080000, 0x00000000, 0x00000020, 0x00400080,
  0x00000020, 0x00000000, 0x00000010, 0x00100010, 0x00000010, 0x00000000,
  0x00000000, 0x10000010, 0x00000000, 0x10000000, 0x00000000, 0x002f8386,
  0x00000000, 0x0016536c, 0x00000000, 0x00100000, 0x00000000, 0x00100000,
  0x00000000, 0x00000010, 0x00000000, 0x00000010, 0x00000000, 0x00000001,
  0x00000000, 0x00000001, 0x00000000, 0x00000000, 0x00000000, 0x00000000,
  0x00000000, 0x00000000, 0xffffffff, 0xffffffff, 0xffffffff, 0xfffffa9d,
  0xffffffff, 0xfffffa9d, 0xffffffff, 0xffffa9cc, 0xffffffff, 0xffffa9cc,
  0xffffffff, 0xa9cb1d25, 0xffffffff, 0xa9cb1d25, 0xffffffa9, 0xcb1d7a7e,
  0xffffffa9, 0xcb1d2449, 0xffffa9cb, 0x7358d531, 0xffffa9cb, 0x1d24488a,
  0xffff5397, 0x93196ae0, 0xffff5396, 0x3a489113, 0xd4e58e92, 0x24449506,
  0xa9cb1d24, 0x48892a0b, 0x5634e2db, 0xb776d5f5, 0x2b1a716d, 0xdbbb6afa,
  0x0000ac6b, 0x1e8dac09, 0x0000ac69, 0xc5b76eed, 0x00005635, 0x3910f087,
  0x00005634, 0xe2dbb776, 0x00000056, 0x34e331ec, 0x00000056, 0x34e2dbb7,
  0x00000001, 0x00000002, 0x00000000, 0x784a3552, 0x00000000, 0x5634e2dc,
  0x00000000, 0x5634e2db, 0x00000000, 0x00005634, 0x00000000, 0x00005634,
  0x00000000, 0x00000563, 0x00000000, 0x00000563, 0x00000000, 0x00000001,
  0x00000000, 0x00000000, 0x00000000, 0x00000000, 0xffffffff, 0xffffffff,
  0xffffffff, 0xfffff801, 0xffffffff, 0xfffff801, 0xffffffff, 0xffff8001,
  0xffffffff, 0xffff8001, 0xffffffff, 0x80000001, 0xffffffff, 0x80000001,
  0xffffff80, 0x00008000, 0xffffff80, 0x00000001, 0xffff8000, 0x7fff8001,
  0xffff8000, 0x00000001, 0xffff0001, 0xfffc0008, 0xffff0000, 0x00000001,
  0xc0000000, 0x00000001, 0x80000000, 0x00000001, 0x7fffffff, 0xffffffff,
  0x3fffffff, 0xffffffff, 0x00010002, 0x00040008, 0x0000ffff, 0xffffffff,
  0x00008000, 0x80008000, 0x00007fff, 0xffffffff, 0x00000080, 0x00008000,
  0x0000007f, 0xffffffff, 0x00000001, 0x7c1c33e6, 0x00000000, 0xb29b67a6,
  0x00000000, 0x80000000, 0x00000000, 0x7fffffff, 0x00000000, 0x00008000,
  0x00000000, 0x00007fff, 0x00000000, 0x00000800, 0x00000000, 0x000007ff,
  0x00000000, 0x00000001, 0x00000000, 0x00000001
])

var TEST_STRINGS = [
  '-9223372036854775808',
  '-5226755067826871589',
  '-4503599627370497',
  '-4503599627370496',
  '-281474976710657',
  '-281474976710656',
  '-4294967297',
  '-4294967296',
  '-16777217',
  '-16777216',
  '-65537',
  '-65536',
  '-32769',
  '-32768',
  '-2',
  '-1',
  '0',
  '1',
  '2',
  '32767',
  '32768',
  '65535',
  '65536',
  '16777215',
  '16777216',
  '1446306523',
  '3078018549',
  '4294967295',
  '4294967296',
  '281474976710655',
  '281474976710656',
  '4503599627370495',
  '4503599627370496',
  '6211839219354490357',
  '9223372036854775807'
]


TEST('ToFromBits', () => {
  for (var i = 0; i < TEST_BITS.length; i += 2) {
    let val = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    assertEq(val._low, TEST_BITS[i + 1])
    assertEq(val._high, TEST_BITS[i])
  }
})

TEST('ToFromInt32', () => {
  for (var i = 0; i < TEST_BITS.length; i += 1) {
    let val = SInt64.fromInt32(TEST_BITS[i])
    assertEq(val.toInt32(), TEST_BITS[i])
  }
})

TEST('ToFromFloat64', () => {
  for (var i = 0; i < TEST_BITS.length; i += 2) {
    let num = TEST_BITS[i] * Math.pow(2, 32) + TEST_BITS[i + 1] >= 0 ?
        TEST_BITS[i + 1] :
        Math.pow(2, 32) + TEST_BITS[i + 1];
    let val = SInt64.fromFloat64(num)
    assertEq(val.toFloat64(), num)
  }
  // Test edge cases
  assertEq(SInt64.fromFloat64(NaN), SInt64.ZERO)
  assertEq(SInt64.fromFloat64(Infinity), SInt64.MAX)
  assertEq(SInt64.fromFloat64(-Infinity), SInt64.MIN)
})

TEST('FromDecimalCachedValues', () => {
  // Make sure we are not leaking longs by incorrect caching of decimal
  // numbers and failing-fast in debug mode.
  assertThrows(() => SInt64.fromInt32(0.1))
  assertThrows(() => SInt64.fromInt32(0.2))
  assertThrows(() => SInt64.fromInt32(1.1))
})

TEST('egz', () => {
  for (var i = 0; i < TEST_BITS.length; i += 2) {
    let val = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    assertEq(val.eqz(), TEST_BITS[i] == 0 && TEST_BITS[i + 1] == 0)
  }
})

TEST('isNeg', () => {
  for (var i = 0; i < TEST_BITS.length; i += 2) {
    let val = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    assertEq(val.isNeg(), (TEST_BITS[i] >> 31) != 0)
  }
})

TEST('isOdd', () => {
  for (var i = 0; i < TEST_BITS.length; i += 2) {
    let val = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    assertEq(val.isOdd(), (TEST_BITS[i + 1] & 1) != 0)
  }
})

TEST('comparisons', () => {
  for (let i = 0; i < TEST_BITS.length; i += 2) {
    let vi = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    for (let j = 0; j < TEST_BITS.length; j += 2) {
      let vj = new SInt64(TEST_BITS[j + 1], TEST_BITS[j])
      assertEq(vi.eq(vj),  i == j, "comparison#" + i)
      assertEq(vi.lt(vj),  i < j,  "comparison#" + i)
      assertEq(vi.lte(vj), i <= j, "comparison#" + i)
      assertEq(vi.gt(vj),  i > j,  "comparison#" + i)
      assertEq(vi.gte(vj), i >= j, "comparison#" + i)
    }
  }
})

TEST('bitOperations', () => {
  for (let i = 0; i < TEST_BITS.length; i += 2) {
    let actx = `bitOperations[i=${i}]`
    let vi = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    assertEq(vi.not()._high, ~TEST_BITS[i], actx)
    assertEq(vi.not()._low, ~TEST_BITS[i + 1], actx)

    for (let j = 0; j < TEST_BITS.length; j += 2) {
      actx = `bitOperations[i=${i},j=${j}]`
      let vj = new SInt64(TEST_BITS[j + 1], TEST_BITS[j])
      assertEq(vi.and(vj)._high, TEST_BITS[i]     & TEST_BITS[j], actx)
      assertEq(vi.and(vj)._low,  TEST_BITS[i + 1] & TEST_BITS[j + 1], actx)
      assertEq(vi.or(vj)._high,  TEST_BITS[i]     | TEST_BITS[j], actx)
      assertEq(vi.or(vj)._low,   TEST_BITS[i + 1] | TEST_BITS[j + 1], actx)
      assertEq(vi.xor(vj)._high, TEST_BITS[i]     ^ TEST_BITS[j], actx)
      assertEq(vi.xor(vj)._low,  TEST_BITS[i + 1] ^ TEST_BITS[j + 1], actx)
    }

    actx = `bitOperations[i=${i}]`
    assertEq(vi.shl(0)._high,          TEST_BITS[i], actx)
    assertEq(vi.shl(0)._low,           TEST_BITS[i + 1], actx)
    assertEq(vi.shr_s(0)._high,         TEST_BITS[i], actx)
    assertEq(vi.shr_s(0)._low,          TEST_BITS[i + 1], actx)
    assertEq(vi.shr_u(0)._high, TEST_BITS[i], actx)
    assertEq(vi.shr_u(0)._low,  TEST_BITS[i + 1], actx)

    for (let len = 1; len < 64; ++len) {
      actx = `bitOperations[i=${i},len=${len}]`
      if (len < 32) {
        assertEq(
          vi.shl(len)._high,
          (TEST_BITS[i] << len) | (TEST_BITS[i + 1] >>> (32 - len)),
          actx
        )
        assertEq(vi.shl(len)._low, TEST_BITS[i + 1] << len, actx)

        assertEq(vi.shr_s(len)._high, TEST_BITS[i] >> len, actx)
        assertEq(
          vi.shr_s(len)._low,
          (TEST_BITS[i + 1] >>> len) | (TEST_BITS[i] << (32 - len)),
          actx
        )

        assertEq(vi.shr_u(len)._high, TEST_BITS[i] >>> len, actx)
        assertEq(
          vi.shr_u(len)._low,
          (TEST_BITS[i + 1] >>> len) | (TEST_BITS[i] << (32 - len)),
          actx
        )
      } else {
        assertEq(vi.shl(len)._high, TEST_BITS[i + 1] << (len - 32), actx)
        assertEq(vi.shl(len)._low, 0, actx)

        assertEq(vi.shr_s(len)._high, TEST_BITS[i] >= 0 ? 0 : -1, actx)
        assertEq(vi.shr_s(len)._low, TEST_BITS[i] >> (len - 32), actx)

        assertEq(vi.shr_u(len)._high, 0, actx)
        if (len == 32) {
          assertEq(vi.shr_u(len)._low, TEST_BITS[i], actx)
        } else {
          assertEq(
            vi.shr_u(len)._low,
            TEST_BITS[i] >>> (len - 32),
            actx
          )
        }
      }
    }

    actx = `bitOperations[i=${i}]`
    assertEq(vi.shl(64)._high,   TEST_BITS[i], actx)
    assertEq(vi.shl(64)._low,    TEST_BITS[i + 1], actx)
    assertEq(vi.shr_s(64)._high, TEST_BITS[i], actx)
    assertEq(vi.shr_s(64)._low,  TEST_BITS[i + 1], actx)
    assertEq(vi.shr_u(64)._high, TEST_BITS[i], actx)
    assertEq(vi.shr_u(64)._low,  TEST_BITS[i + 1], actx)
  }
})

TEST('neg', () => {
  for (let i = 0; i < TEST_BITS.length; i += 2) {
    let vi = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    if (TEST_BITS[i + 1] == 0) {
      assertEq(vi.neg()._high, (~TEST_BITS[i] + 1) | 0)
      assertEq(vi.neg()._low, 0)
    } else {
      assertEq(vi.neg()._high, ~TEST_BITS[i])
      assertEq(vi.neg()._low,  (~TEST_BITS[i + 1] + 1) | 0)
    }
  }
})

TEST('add', () => {
  let count = 0
  for (let i = 0; i < TEST_BITS.length; i += 2) {
    let vi = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    for (let j = 0; j < i; j += 2) {
      let vj = new SInt64(TEST_BITS[j + 1], TEST_BITS[j])
      let result = vi.add(vj)
      assertEq(result._high, TEST_ADD_BITS[count++])
      assertEq(result._low,  TEST_ADD_BITS[count++])
    }
  }
})

TEST('sub', () => {
  let count = 0
  for (let i = 0; i < TEST_BITS.length; i += 2) {
    let vi = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    for (let j = 0; j < TEST_BITS.length; j += 2) {
      let vj = new SInt64(TEST_BITS[j + 1], TEST_BITS[j])
      let result = vi.sub(vj)
      assertEq(result._high, TEST_SUB_BITS[count++])
      assertEq(result._low,  TEST_SUB_BITS[count++])
    }
  }
})

TEST('mul', () => {
  let count = 0;
  for (let i = 0; i < TEST_BITS.length; i += 2) {
    let vi = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    for (let j = 0; j < i; j += 2) {
      let vj = new SInt64(TEST_BITS[j + 1], TEST_BITS[j])
      let result = vi.mul(vj)
      assertEq(result._high, TEST_MUL_BITS[count++])
      assertEq(result._low,  TEST_MUL_BITS[count++])
    }
  }
})

if (js_mul) TEST('mul/js', () => {
  let count = 0;
  for (let i = 0; i < TEST_BITS.length; i += 2) {
    let vi = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    for (let j = 0; j < i; j += 2) {
      let vj = new SInt64(TEST_BITS[j + 1], TEST_BITS[j])
      let result = js_mul.call(vi, vj)
      assertEq(result._high, TEST_MUL_BITS[count++])
      assertEq(result._low,  TEST_MUL_BITS[count++])
    }
  }
})

TEST('div-mod', () => {
  let countPerDivModCall = 0
  for (let j = 0; j < TEST_BITS.length; j += 2) {
    let vj = new SInt64(TEST_BITS[j + 1], TEST_BITS[j])
    if (!vj.eqz()) {
      countPerDivModCall += 2
    }
  }

  let countDivMod = 0
  for (let i = 0; i < TEST_BITS.length; i += 2) {
    // goog.global['testDivMod' + i] = createTestDivMod(i, countDivMod)
    // function createTestDivMod(i, countDivMod) {
    //return function() {
    let count = countDivMod
    countDivMod += countPerDivModCall
    let vi = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    for (let j = 0; j < TEST_BITS.length; j += 2) {
      let vj = new SInt64(TEST_BITS[j + 1], TEST_BITS[j])
      if (!vj.eqz()) {
        let divResult = vi.div(vj)
        assertEq(divResult._high, TEST_DIV_BITS[count])
        assertEq(divResult._low,  TEST_DIV_BITS[count + 1])

        let modResult = vi.mod(vj)
        let combinedResult = divResult.mul(vj).add(modResult)
        assert(vi.eq(combinedResult))

        if (js_div_s) {
          assert(js_mod_s)
          divResult = js_div_s.call(vi, vj)
          assertEq(divResult._high, TEST_DIV_BITS[count])
          assertEq(divResult._low,  TEST_DIV_BITS[count + 1])

          let modResult = js_mod_s.call(vi, vj)
          let combinedResult = divResult.mul(vj).add(modResult)
          assert(vi.eq(combinedResult))
        }

        count += 2
      }
    }
  }
})


TEST('ToFromString', () => {
  for (let i = 0; i < TEST_BITS.length; i += 2) {
    let vi = new SInt64(TEST_BITS[i + 1], TEST_BITS[i])
    let str = vi.toString(10)
    assertEq(str, TEST_STRINGS[i / 2])
    let n = SInt64.fromStr(str, 10)
    assertEq(n._high, TEST_BITS[i])
    assertEq(n._low,  TEST_BITS[i + 1])

    for (let radix = 2; radix <= 36; ++radix) {
      let result = vi.toString(radix)
      n = SInt64.fromStr(result, radix)
      assertEq(n._high, TEST_BITS[i])
      assertEq(n._low,  TEST_BITS[i + 1])
    }
  }

  // this was once wrong in goog.math.Long
  assertEq(SInt64.fromStr("zzzzzz", 36).toString(36), "zzzzzz")
  assertEq(SInt64.fromStr("-zzzzzz", 36).toString(36), "-zzzzzz")
})

